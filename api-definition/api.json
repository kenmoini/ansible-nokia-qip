{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "VitalQIP REST Interface",
        "description": "Sample call for RESTful APIs"
    },
    "tags": [
        {
            "name": "Authentication"
        },
        {
            "name": "V4 Network"
        },
        {
            "name": "V6 Subnet"
        },
        {
            "name": "V6 Address"
        },
        {
            "name": "V4 Subnet"
        },
        {
            "name": "V4 Address"
        },
        {
            "name": "RR"
        },
        {
            "name": "Selected V4 Address"
        },
        {
            "name": "Selected V6 Address"
        },
        {
            "name": "Zone"
        },
        {
            "name": "V6 Block"
        },
        {
            "name": "V6 Range"
        },
        {
            "name": "SAML Identity Provider"
        },
        {
            "name": "Utilities"
        }
    ],
    "basePath": "/api",
    "consumes": [
        "application/json",
        "application/xml"
    ],
    "produces": [
        "application/json",
        "application/xml"
    ],
    "paths": {
        "/v1/{orgName}/v4network/{networkInfo}{extension}": {
            "get": {
                "description": "Get V4 network by name or address",
                "summary": "Get V4 network",
                "operationId": "getV4Network",
                "tags": [
                    "V4 Network"
                ],
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "networkInfo",
                        "description": "Network info (address or name of V4 network)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/V4NetworkRec"
                        }
                    },
                    "400": {
                        "description": "&lt;address&gt; is not an IPv4 network address. Network address should have format x.x.x.0 (x is a number between 1 and 255)\n"
                    },
                    "404": {
                        "description": "Network not found: [address=&lt;address&gt;]\n"
                    }
                }
            }
        },
        "/v1/{orgName}/v4network/{networkInfo}": {
            "delete": {
                "description": "Delete V4 network by name or address",
                "summary": "Delete V4 network",
                "operationId": "deleteV4Network",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Network"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "networkInfo",
                        "description": "Network info (address or name of V4 network)",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Network does not exist."
                    }
                }
            }
        },
        "/v1/{orgName}/v4network": {
            "post": {
                "description": "Create a new V4 network",
                "summary": "Add new V4 network",
                "operationId": "addV4Network",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Network"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V4NetworkRec"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Created"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/Bad"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/NotFound"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Conflict"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify V4 network name, warning type, warning percent...",
                "summary": "Update V4 network",
                "operationId": "modifyV4Network",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Network"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V4NetworkRec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OK"
                        }
                    },
                    "400": {
                        "description": "&lt;address&gt; is not an IPV4 Network Address\n\nMissing Network IP Address\n\nGiven Network &lt;address&gt; contains invalid Threshold Value: &lt;warningPercent&gt; or WarningType: &lt;warningType&gt;\n\nInvalid Attribute(s): &lt;name&gt;\n\nUDA &lt;name&gt;'s Value &lt;value&gt; is not an valid Boolean Value\n\nAddress ranges must not be duplicated",
                        "schema": {
                            "$ref": "#/definitions/Bad"
                        }
                    },
                    "404": {
                        "description": "Network not found: [address=&lt;address&gt]",
                        "schema": {
                            "$ref": "#/definitions/NotFound"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v4network{extension}": {
            "get": {
                "description": "Search V4 Network by name or address.<br>\n*Notes:* If the number of returned V4 Networks is less than or equal to the page size, the page index parameter is not honored.",
                "summary": "Search V4 network",
                "operationId": "searchV4Network",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Network"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "address",
                        "description": "V4 network address",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "V4 network name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "page size of response",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageIndex",
                        "description": "page index of response",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/V4NetworkRec"
                            }
                            
                        }
                    },
                    "400": {
                        "description": "&lt;address&gt; is not an IPv4 network address. Network address should have format x.x.x.0 (x is a number between 1 and 255)\n"
                    },
                    "404": {
                        "description": "Network not found: [address=&lt;address&gt;]\n"
                    }
                }
            }
        },
        "/v1/{orgName}/v6subnet/{address}/{prefixLength}{extension}": {
            "get": {
                "description": "Get V6 subnet get by address and prefix length.",
                "summary": "Get V6 Subnet by address",
                "operationId": "getV6SubnetByAddress",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "address",
                        "description": "Address of V6 subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "prefixLength",
                        "description": "prefix length of v6 subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/V6SubnetRec"
                        }
                    },
                    "404": {
                        "description": "Subnet not found"
                    }
                }
            }
        },
        "/v1/{orgName}/v6subnet/{address}/{prefixLength}": {
            "delete": {
                "description": "Delete V6 Subnet by address and prefix length.",
                "summary": "Delete V6 Subnet",
                "operationId": "deleteV6SubnetByAddress",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "address",
                        "description": "Address of V6 subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "prefixLength",
                        "description": "prefix length of v6 subnet",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OK"
                        }
                    },
                    "404": {
                        "description": "Subnet not found"
                    }
                }
            }
        },
        "/v1/{orgName}/v6subnet/{address}/{prefixLength}/v6addresses{extension}": {
            "get": {
                "description": "Get list v6 address in v6 subnet by address and prefixlength.",
                "summary": "Get list V6 Address of a V6 Subnet",
                "operationId": "getV6AddressInV6SubnetByAddress",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "address",
                        "description": "Address of V6 subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "prefixLength",
                        "description": "prefix length of v6 subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/V6AddressRec"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/v1/{orgName}/v6subnet/{address}/{prefixLength}/ranges{extension}": {
            "get": {
                "description": "Get list range in v6 subnet by address and prefixlength.",
                "summary": "Get list range of a V6 Subnet",
                "operationId": "getListRangeInV6SubnetByAddress",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "address",
                        "description": "Address of V6 subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "prefixLength",
                        "description": "prefix length of v6 subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/V6AddressRec"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/v1/{orgName}/v6subnet/{subnetName}{extension}": {
            "get": {
                "description": "Get V6 subnet by name",
                "summary": "Get V6 Subnet by name",
                "operationId": "getV6SubnetByName",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subnetName",
                        "description": "Name of V6 subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/V6SubnetRec"
                        }
                    },
                    "404": {
                        "description": "Subnet not found"
                    }
                }
            }
        },
        "/v1/{orgName}/v6subnet/{subnetName}": {
            "delete": {
                "description": "Delete V6 Subnet by name",
                "summary": "Delete V6 Subnet by name",
                "operationId": "deleteV6SubnetByName",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subnetName",
                        "description": "V6 Subnet's name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OK"
                        }
                    },
                    "404": {
                        "description": "Subnet not found"
                    }
                }
            }
        },
        "/v1/{orgName}/v6subnet": {
            "post": {
                "description": "Creates a new V6 Subnet. Subnet Name and Address pairs are returned after adding subnets successfully.<br>\n*Note:* Should not test this API on Swagger. Please use another REST Client (cURL, Postman).",
                "summary": "Add new V6 Subnet",
                "operationId": "addV6Subnet",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "The format of request body when creating a V6Subnet is different to the format of response when searching a V6Subnet. Please do not use it.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V6CreateSubnetRec"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created subnets - &lt;subnetsNo&gt;<br>\n&lt;no&gt;&lt;subnetName&gt; - &lt;subnetAddress&gt;"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/Bad"
                        }
                    },
                    "404": {
                        "description": "Pool not found: [name=&lt;name&gt;, parent=&lt;name&gt;]<br>\nBlock not found\n",
                        "schema": {
                            "$ref": "#/definitions/NotFound"
                        }
                    },
                    "409": {
                        "description": "Subnet with this name already Exists in the Parent Pool.",
                        "schema": {
                            "$ref": "#/definitions/Conflict"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify a V6 Subnet",
                "summary": "Update V6 Subnet",
                "operationId": "updateV6Subnet",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V6SubnetRec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OK"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/Bad"
                        }
                    },
                    "404": {
                        "description": "Pool not found: [name=&lt;name&gt;, parent=&lt;name&gt;]<br>\nBlock not found\n",
                        "schema": {
                            "$ref": "#/definitions/NotFound"
                        }
                    },
                    "409": {
                        "description": "Subnet with this name already Exists in the Parent Pool.",
                        "schema": {
                            "$ref": "#/definitions/Conflict"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v6subnet{extension}": {
            "get": {
                "description": "Search V6 Subnet by name or address.<br>\n*Notes:* If the number of returned V6 Subnets is less than or equal to the page size, the page index parameter is not honored.",
                "summary": "Search V6 Subnet",
                "operationId": "searchV6Subnet",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "address",
                        "description": "V6 Subnet address",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "V6 Subnet name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "page size of response",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageIndex",
                        "description": "page index of response",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/V6SubnetRec"
                            }
                        }
                    },
                    "404": {
                        "description": "Subnet not found\n"
                    }
                }
            }
        },
        "/v1/{orgName}/v6address": {
            "post": {
                "description": "Creates V6 Address",
                "summary": "Add new V6 Address",
                "operationId": "addV6Address",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Address"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V6AddressRec"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Created"
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: [field]\n",
                        "schema": {
                            "$ref": "#/definitions/Bad"
                        }
                    },
                    "404": {
                        "description": "Range not found.",
                        "schema": {
                            "$ref": "#/definitions/NotFound"
                        }
                    },
                    "409": {
                        "description": "IPv6 address with the given IAID and DUID combination already exists within the parent subnet subnetAddress.",
                        "schema": {
                            "$ref": "#/definitions/Conflict"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify V6 Address",
                "summary": "Update V6 Address",
                "operationId": "updateV6Address",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Address"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V6AddressRec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Created"
                        }
                    },
                    "404": {
                        "description": "Address not found.<br>\nUDA group not found: [name=&lt;groupName&gt;].<br>\nUser Defined Attribute not found: [name=&lt;udaName&gt;].\n",
                        "schema": {
                            "$ref": "#/definitions/NotFound"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v6address/{addressInfo}/": {
            "delete": {
                "description": "Delete V6 Address by name or address. The trailing slash is required.",
                "summary": "Delete V6 Address",
                "operationId": "deleteV6Address",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Address"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "addressInfo",
                        "description": "V6 address or name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OK"
                        }
                    },
                    "404": {
                        "description": "Address not found."
                    }
                }
            }
        },
        "/v1/{orgName}/v6address/{addressInfo}{extension}": {
            "get": {
                "description": "Get V6 address by address or by name",
                "summary": "Get V6 Address",
                "operationId": "getV6Address",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Address"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "addressInfo",
                        "description": "Address OR object name and domain name of V6 Address",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/V6AddressRec"
                        }
                    },
                    "404": {
                        "description": "Address not found.\n"
                    }
                }
            }
        },
        "/v1/{orgName}/v4subnet": {
            "post": {
                "description": "Creates V4 Subnet",
                "summary": "Add new V4 Subnet",
                "operationId": "addV4Subnet",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
					{
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V4SubnetRec"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Created"
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: [field]\n\nUDA &lt;uda&gt; is required.\n\nUDA &lt;uda&gt;'s value is required.\n\nUDA &lt;uda&gt; in group &lt;group&gt; is required.\n\nUDA &lt;uda&gt;'s value in group &lt;group&gt; is required.",
                        "schema": {
                            "$ref": "#/definitions/Bad"
                        }
                    },
                    "409": {
                        "description": "Subnet address already exists",
                        "schema": {
                            "$ref": "#/definitions/Conflict"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify V4 Subnet",
                "summary": "Update V4 Subnet",
                "operationId": "updateV4Subnet",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "isUpdate",
                        "in": "query",
                        "description": "update",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V4SubnetRec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Created"
                        }
                    },
                    "400": {
                        "description": "Or \"&lt;routeAddress&gt;\" is not an IPv4 address<br>\nOr Invalid Attribute(s): &lt;attributeName&gt;<br>\nOr The threshold is invalid. Valid warning type is in 0 - 3. Valid warning percent is in 0 - 99.<br>\nOr Invalid input specified for [checkUsage] parameter. Required [true | false], Received [false1].\n",
                        "schema": {
                            "$ref": "#/definitions/Bad"
                        }
                    },
                    "404": {
                        "description": "Or Subnet having address \"&lt;address&gt;\" does not exist.<br>\nOr Domain &lt;domainName&gt; not found.<br>\nOr The time server object &lt;timeServer&gt; does not exist.<br>\nOr DHCP Server &lt;dhcpServer&gt; does not exist.<br>\nOr DHCP Option Template not found: [dhcpOptionTemplate]<br>\nOr DHCP Policy Template not found: [dhcpPolicyTemplate]<br>\nOr DNS Server not found: [&lt;dnsServerName&gt;]\"\n"
                    },
                    "409": {
                        "description": "Subnet address already exists",
                        "schema": {
                            "$ref": "#/definitions/Conflict"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v4subnet{extension}": {
            "get": {
                "description": "Search V4 subnet by name, address or UDA value.",
                "summary": "Search V4 Subnet",
                "operationId": "searchV4Subnet",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "address",
                        "description": "V4 Subnet address",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "V4 Subnet name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "udaName",
                        "description": "udaName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "udaValue",
                        "description": "udaValue",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/V4SubnetRec"
                            }
                            
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: [UdaName or UdaValue]\n"
                    },
                    "404": {
                        "description": "Subnet not found\n"
                    }
                }
            }
        },
        "/v1/{orgName}/v4subnet/split": {
            "post": {
                "description": "Split V4 subnet.",
                "summary": "Split V4 Subnet",
                "operationId": "splitV4Subnet",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SplitV4AlterSubnetRec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid subnet address.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Subnet having address &lt;subnetAddress&gt; does not exist.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v4subnet/join": {
            "post": {
                "description": "Join V4 subnet.",
                "summary": "Join V4 Subnet",
                "operationId": "JoinV4Subnet",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JoinV4AlterSubnetRec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: &lt;Field&gt;.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Subnet having address &lt;subnetAddress&gt; does not exist.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v4subnet/{subnetAddress}{extension}": {
            "get": {
                "description": "Get V4 subnet by subnet address.<br>Get objects usage information of a subnet using ?usage parameter",
                "summary": "Get V4 Subnet and Subnet Statistics Information",
                "operationId": "getV4Subnet",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subnetAddress",
                        "description": "Subnet address",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "usage",
                        "description": "Add this parameter to show subnet statistics information",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/V4SubnetRec"
                        }
                    },
                    "404": {
                        "description": "Subnet not found"
                    }
                }
            }
        },
        "/v1/{orgName}/v4subnet/{subnetInfo}/": {
            "delete": {
                "description": "Delete V4 Subnet by name or by address. The trailing slash is required.",
                "summary": "Delete V4 Subnet",
                "operationId": "deleteV4SubnetByName",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subnetInfo",
                        "description": "V4 Subnet's name or address",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "multipleDelete",
                        "description": "Multiple delete",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "deleteReserveObjects",
                        "description": "delete reserve objects",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "application",
                        "description": "application name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Subnet having address &lt;subnetAddress&gt; does not exist.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v4subnet/{subnetAddress}/v4addresses{extension}": {
            "get": {
                "description": "Get list V4 address of a V4 Subnet by subnet address",
                "summary": "Get list V4 Address of a V4 Subnet",
                "operationId": "getListAddressV4Subnet",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Subnet"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subnetAddress",
                        "description": "Subnet address",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/V4AddrRec"
                            }
                        }
                    },
                    "404": {
                        "description": "Subnet not found"
                    }
                }
            }
        },
        "/v1/{orgName}/v4address": {
            "post": {
                "description": "Creates V4 Address",
                "summary": "Add new V4 Address",
                "operationId": "addV4Address",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Address"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V4AddrRec"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: [field]\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Given IP Address &lt;address&gt; already exists in subnet &lt;subnet&gt;.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify V4 Address",
                "summary": "Update V4 Address",
                "operationId": "updateV4Address",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Address"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V4AddrRec"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Created"
                        }
                    },
                    "400": {
                        "description": "Address not found<br>\nUDA group not found: [name=G33].\n",
                        "schema": {
                            "$ref": "#/definitions/Bad"
                        }
                    },
                    "404": {
                        "description": "User Defined Attribute not found: [name=1231].\n"
                    },
                    "409": {
                        "description": "Given IP Address 1.1.1.20 already exists in subnet 1.1.1.0.",
                        "schema": {
                            "$ref": "#/definitions/Conflict"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v4addresses": {
            "put": {
                "description": "Modify V4 Addresses",
                "summary": "Update V4 Addresses",
                "operationId": "updateV4Addresses",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Address"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V4AddressesRec"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Created"
                        }
                    },
                    "400": {
                        "description": "Address not found<br>\nUDA group not found: [name=G33].\n",
                        "schema": {
                            "$ref": "#/definitions/Bad"
                        }
                    },
                    "404": {
                        "description": "User Defined Attribute not found: [name=1231].\n"
                    },
                    "409": {
                        "description": "Given IP Address 1.1.1.20 already exists in subnet 1.1.1.0.",
                        "schema": {
                            "$ref": "#/definitions/Conflict"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v4address/{addressInfo}/": {
            "delete": {
                "description": "Delete V4 Address by name or address. The trailing slash is required.",
                "summary": "Delete V4 Address",
                "operationId": "deleteV4Address",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Address"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "addressInfo",
                        "description": "V4 address or name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OK"
                        }
                    },
                    "404": {
                        "description": "Could not find IPv4 Address &lt;address&gt;.<br>\nOr No object is found\n"
                    }
                }
            }
        },
        "/v1/{orgName}/v4address/{addressInfo}{extension}": {
            "get": {
                "description": "Get V4 address by name or by address",
                "summary": "Get V4 Address",
                "operationId": "getV4Address",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V4 Address"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "addressInfo",
                        "description": "Address or object name of V4 Address",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/V4AddrRec"
                        }
                    },
                    "404": {
                        "description": "Object name &lt;name&gt; is not found.<br>\nAddress &lt;address&gt; is not found.\n"
                    }
                }
            }
        },
        "/v1/{orgName}/rr/singleDelete": {
            "delete": {
                "description": "Delete a single RR",
                "summary": "Single Delete RR",
                "operationId": "deleteASingleRr",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "RR"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "infraFQDN",
                        "description": "Infrastrucutre Full Qualify Domain Name - Required if not address",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "address",
                        "description": "Address of infrastructure. - Required if not infraFQDN",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "infraType",
                        "description": "Type of infrastructure: OBJECT|V6ADDRESS|ZONE|V4REVERSEZONE|V6REVERSEZONE",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "rrType",
                        "description": "Type of resource record.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "Owner name for the resource record.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "ttl",
                        "description": "The length of time (in seconds) the name server will hold this information.\nIf no TTL is defined, the value is inherited from the zone.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "data1",
                        "description": "The data associated with the specific resource record type.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "data2",
                        "description": "The data associated with the specific resource record type.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "data3",
                        "description": "The data associated with the specific resource record type.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "data4",
                        "description": "The data associated with the specific resource record type.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "publishing",
                        "description": "Publishing type.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "classType",
                        "description": "Class type of records pertains to a type of network or software.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Network does not exist."
                    },
                    "406": {
                        "description": "Not Acceptable."
                    }
                }
            }
        },
        "/v1/{orgName}/rr/{infraType}/{rrInfo}/": {
            "delete": {
                "description": "Delete All RRs by infraType and by name or address. The trailing slash is required.",
                "summary": "Delete RR",
                "operationId": "deleteRRbyInfraTypebyNameOrAddress",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "RR"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "infraType",
                        "description": "infratype: OBJECT|V6ADDRESS|ZONE|V4REVERSEZONE|V6REVERSEZONE|NODE",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "rrInfo",
                        "description": "name or address",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Network does not exist."
                    },
                    "406": {
                        "description": "Not Acceptable."
                    }
                }
            }
        },
        "/v1/{orgName}/rr/{rrInfo}/": {
            "delete": {
                "description": "Delete All RRs by name or address. The trailing slash is required.",
                "summary": "Delete RRs by name or address",
                "operationId": "deleteRRsbyNameOrAddress",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "RR"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "rrInfo",
                        "description": "name or address",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Network does not exist."
                    },
                    "406": {
                        "description": "Not Acceptable."
                    }
                }
            }
        },
        "/v1/{orgName}/rr{extension}": {
            "get": {
                "description": "Search RR by name or address.",
                "summary": "Search RR by name or address",
                "operationId": "getRRByName",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "RR"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "Infrastrucutre FQDN - Required if Search RR by name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "address",
                        "description": "Address of infrastructure - Required if Search RR by address",
                        "required": false,
                        "type": "string"
                    },
                    {
                    	"in": "query",
                        "name": "udaName",
                        "description": "Required if Search by UDA",
                        "required": false,
                        "type": "string"
                    },
                    {
                    	"in": "query",
                        "name": "udaValue",
                        "description": "Required if Search by UDA",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageIndex",
                        "description": "page index",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "page size ( maximum value: 10000)",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "infrastructure type: OBJECT|V6ADDRESS|ZONE|V4REVERSEZONE|V6REVERSEZONE|NODE|ROUTE53ZONE|ALL",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "getDefaultRRs",
                        "description": "Get Default Resource Records or not",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RRRec"
                            }
                        }
                    },
                    "404": {
                        "description": "Not resource record found."
                    },
                    "406": {
                        "description": "Not acceptable"
                    }
                }
            }
        },
        "/v1/{orgName}/rr": {
            "post": {
                "description": "Creates a new RR",
                "summary": "Add new RR",
                "operationId": "addRR",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "RR"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UdaRRRec"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Created"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/Bad"
                        }
                    },
                    "404": {
                        "description": "Pool not found: [name=&lt;name&gt;, parent=&lt;name&gt;]<br>\nBlock not found\n",
                        "schema": {
                            "$ref": "#/definitions/NotFound"
                        }
                    },
                    "409": {
                        "description": "Subnet with this name already Exists in the Parent Pool.",
                        "schema": {
                            "$ref": "#/definitions/Conflict"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete All RRs or Delete Single RR using request body",
                "summary": "Delete RR",
                "operationId": "DeleteRR",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "RR"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body when delete RR",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RRDeleteInfo"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Network does not exist."
                    },
                    "406": {
                        "description": "Not Acceptable."
                    }
                }
            },
            "put": {
                "description": "Update a RR",
                "summary": "Update RR",
                "operationId": "updateRR",
                "tags": [
                    "RR"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "orgName",
                        "in": "path",
                        "description": "Organization Name<br> \nExample: VitalQIP Organization\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body when modify RR",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateRRRec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/selectedv4address/{address}/": {
            "delete": {
                "description": "Delete selected V4 address by address",
                "summary": "Delete Selected V4 Address",
                "operationId": "DeleteSelectedV4address",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Selected V4 Address"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "address",
                        "description": "subnet address",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error - IP address [address] does not have an object associated with it"
                    }
                }
            }
        },
        "/v1/{orgName}/selectedv4address/{v4SubnetAddress}{extension}": {
            "put": {
                "description": "Get allows to select an IPv4 from a specific IPv4 subnet or Get next Ipv4 address (getting a next address from a subnet can take an optional set of start/end address pairs)",
                "summary": "Get next selected V4 address",
                "operationId": "selectedV4addressWithRange",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Selected V4 Address"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body - Required if get a next address in range",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AddrRangeList"
                        }
                    },
                    {
                        "in": "path",
                        "name": "v4SubnetAddress",
                        "description": "subnet address",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NextV4AddrRec"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error - Allocation pool AddrRange [startAddress=&lt;address&gt;, endAddress=&lt;address&gt;] already exists/overlaps existed pool AddrRange [startAddress=&lt;address&gt;, endAddress=&lt;address&gt;]"
                    }
                }
            }
        },
        "/v1/{orgName}/selectedv6address/{address}": {
            "delete": {
                "description": "Delete selected V6 address by address",
                "summary": "Delete Selected V6 Address",
                "operationId": "DeleteSelectedV6address",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Selected V6 Address"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml<br>\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "address",
                        "description": "range address",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not found - Address address was not found in database."
                    },
                    "406": {
                        "description": "Not Acceptable - The object [address] is not a selected object."
                    }
                }
            }
        },
        "/v1/{orgName}/selectedv6address/{address}{extension}": {
            "put": {
                "description": "Get allows you to get the detailed information for one IPv6 address. Get next Ipv6address (getting a next address from a subnet can take an optional set of start/end address pairs)",
                "summary": "Get next selected V6 address",
                "operationId": "selectedV6addressWithRange",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Selected V6 Address"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body - Required if Get a next address in range.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AddrRangeList"
                        }
                    },
                    {
                        "in": "path",
                        "name": "address",
                        "description": "address",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/V6GetIpAddressRec"
                        }
                    },
                    "400": {
                        "description": "Bad request - Permission denied.  You do not have appropriate privileges to perform this action."
                    },
                    "404": {
                        "description": "Not Found - Subnet Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error The start address &lt;address&gt; must be less than the end address &lt;address&gt;.<br>\nInternal Server Error The start address or the end address is invalid  AddrRange [startAddress=&lt;address&gt;, endAddress=&lt;address&gt;]<br>\nInternal Server Error - Allocation pool AddrRange [startAddress=&lt;address&gt;, endAddress=&lt;address&gt;] already exists/overlaps existed pool AddrRange [startAddress=&lt;address&gt;, endAddress=&lt;address&gt;].\n"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Get REST login token. Expiration time is returned in the response header and cannot exceed maximum expiration time which is configured in qip.properties file.",
                "summary": "Get token",
                "operationId": "getToken",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QIPUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "Authentication": {
                                "description": "Token",
                                "type": "string"
                            },
                            "Date": {
                                "description": "Date Time",
                                "type": "string"
                            },
                            "Expire Time": {
                                "description": "Expire Time",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/v1/{orgName}/v6range{extension}": {
            "get": {
                "description": "Search an IPv6 Range by name or address.<br>\n*Notes:* If the number of returned IPv6 Ranges is less than or equal to the page size, the page index parameter is not honored.",
                "summary": "Search an IPv6 range",
                "operationId": "searchV6Range",
                "tags": [
                    "V6 Range"
                ],
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "Range name.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "address",
                        "description": "IPv6 address of range.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "subnet",
                        "description": "IPv6 address of the subnet.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageIndex",
                        "description": "page index",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "page size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/V6RangeRec"
                            }
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: [name | startAddress | name and subnet]\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Range not found\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
         },
         "/v1/{orgName}/v6range": {
            "post": {
                "description": "Create an IPv6 range.",
                "operationId": "addV6Range",
                "summary": "Create V6 range",
                "tags": [
                    "V6 Range"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "The request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V6RangeRec"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Not a valid IP Address.\n            \nField value is not correct : &lt;name&gt;.\n\nField value is not correct : &lt;startAddress&gt;.\n\nField value is not correct : &lt;newStartAddress&gt;.\n\nField(s) &lt;subnetPrefixLength&gt; cannot be zero.\n\nField value is not correct : &lt;rangePrefixLength&gt;.\n\nField value is not correct : &lt;rangeType&gt;.\n\nField value is not correct : &lt;addressSelection&gt;.\n\nField value is not correct : &lt;standPrimDHCPServer&gt;.\n\nField value is not correct : &lt;optTemplate&gt;.\n\nUDA &lt;udaName&gt;'s Value &lt;udaValue&gt; is not an valid Boolean Value.\n\nRequired input UDA Enabled QIP Type: &lt;udaName&gt; is invalid.\n\nInvalid Attribute(s): &lt;udaValue&gt;.\n\nUDA &lt;udaName&gt;'s Value &lt;udaValue&gt; is not an valid Integer Value.\n\nUDA &lt;udaName&gt;'s value &lt;udaValue&gt; is an invalid IP address.\n\nUDA &lt;uda&gt; is required.\n\nUDA &lt;uda&gt;'s value is required.\n\nUDA &lt;uda&gt; in group &lt;group&gt; is required.\n\nUDA &lt;uda&gt;'s value in group &lt;group&gt; is required.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User Defined Attribute not found: &lt;udaName&gt;.\n\nUDA group not found: &lt;udaGroupName&gt;\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "\nRange address &lt;subnetPrefixLength&gt; is not valid for this subnet &lt;standPrimDHCPServer&gt;.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Invalid permissions for the requested operation.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an IPv6 range from an IPv6 subnet by name or address.\n",
                "summary": "Delete an IPv6 range.",
                "operationId": "deleteV6Range",
                "tags": [
                    "V6 Range"
                ],
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "Range name.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "address",
                        "description": "IPv6 address of range.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "subnet",
                        "description": "IPv6 address of the subnet.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: &lt;name&gt;\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Range not found.\n\nRange not unique. Use range address to perform operation.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify an IPv6 range.",
                "operationId": "modifyV6Range",
                "summary": "Modify V6 range",
                "tags": [
                    "V6 Range"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "The request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V6RangeRec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Not a valid IP Address.\n            \nField value is not correct : &lt;name&gt;.\n\nField value is not correct : &lt;startAddress&gt;.\n\nField value is not correct : &lt;newStartAddress&gt;.\n\nField(s) &lt;subnetPrefixLength&gt; cannot be zero.\n\nField value is not correct : &lt;rangePrefixLength&gt;.\n\nField value is not correct : &lt;rangeType&gt;.\n\nField value is not correct : &lt;addressSelection&gt;.\n\nField value is not correct : &lt;standPrimDHCPServer&gt;.\n\nField value is not correct : &lt;optTemplate&gt;.\n\nUDA &lt;udaName&gt;'s Value &lt;udaValue&gt; is not an valid Boolean Value.\n\nRequired input UDA Enabled QIP Type: &lt;udaName&gt; is invalid.\n\nInvalid Attribute(s): &lt;udaValue&gt;.\n\nUDA &lt;udaName&gt;'s Value &lt;udaValue&gt; is not an valid Integer Value.\n\nUDA &lt;udaName&gt;'s value &lt;udaValue&gt; is an invalid IP address.\n\nUDA &lt;uda&gt; is required.\n\nUDA &lt;uda&gt;'s value is required.\n\nUDA &lt;uda&gt; in group &lt;group&gt; is required.\n\nUDA &lt;uda&gt;'s value in group &lt;group&gt; is required.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User Defined Attribute not found: &lt;udaName&gt;.\n\nUDA group not found: &lt;udaGroupName&gt;\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "\nRange address &lt;subnetPrefixLength&gt; is not valid for this subnet &lt;standPrimDHCPServer&gt;.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Invalid permissions for the requested operation.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/zone": {
            "post": {
                "description": "Create a new DNS zone\n",
                "operationId": "addZone",
                "summary": "Create zone",
                "tags": [
                    "Zone"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "The zone request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DNSZoneRec"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "\nRequired Field(s) Missing: &lt;name&gt;.\n\nDomain &lt;name&gt; contains invalid characters\n\nInvalid zone contact address: &lt;contact&gt;\n\nRequired Field(s) Missing: &lt;email&gt;.\n\nInvalid zone contact address: &lt;email&gt;.\n\nUDA &lt;uda&gt; is not associated with the given infrastructure.\n\nUDA Group &lt;udagroup&gt; is not associated with the given infrastructure.\n\nUDA &lt;uda&gt; is required.\n\nUDA &lt;uda&gt;'s value is required.\n\nUDA &lt;uda&gt; in group &lt;group&gt; is required.\n\nUDA &lt;uda&gt;'s value in group &lt;group&gt; is required.\n\nRequired Field(s) Missing: [Zone name]\n\nRequired Field(s) Missing: [Email]\n\nRequired Field(s) Missing: [expireTime]\n\nRequired Field(s) Missing: [negativeCacheTtl]\n\nRequired Field(s) Missing: [defaultTtl]\n\nRequired Field(s) Missing: [refreshTime]\n\nRequired Field(s) Missing: [retryTime]\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "DNS Server not found: [&lt;dnsServers&gt;]\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Cannot save the zone &lt;zone&gt;: It already exists in database.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Invalid permissions for the requested operation.\n\nPermission Denied. You do not have appropriate privileges to perform this action for normal administrator.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify a zone.\n *Note:* User only can modify the email and SOA Information of a Route 53 Hosted Zone by the REST-API.",
                "operationId": "modifyZone",
                "summary": "Modify zone",
                "tags": [
                    "Zone"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "zoneType",
                        "description": "Type of the zone which you are modifying.\nRoute 53 is the type of Route 53 Hosted Zone\nQIP Managed is the type of the rest of zone in the QIP",
                        "default" :	"QIP Managed",
                        "required": true,
                        "type": "string",
                        "enum" : ["QIP Managed", "Route 53"]
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "The zone request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DNSZoneRec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "The first DNS Server must be added as an primary server.\n\nDNS Server not found: &lt;dnsServer&gt;.\n\nRequired Field(s) Missing: &lt;name&gt;.\n\nRequired Field(s) Missing: &lt;email&gt;.\n\nInvalid zone contact address: &lt;email&gt;.\n\n\nUDA &lt;uda&gt; is required.\n\n\nUDA &lt;uda&gt;'s value is required.\n\n\nUDA &lt;uda&gt; in group &lt;group&gt; is required.\n\n\nUDA &lt;uda&gt;'s value in group &lt;group&gt; is required.\n"
                    },
                    "404": {
                        "description": "DNS Zone [&lt;dnsServer&gt;] not found.\n"
                    },
                    "409": {
                        "description": "Not a valid IPv6 Address.\n\nRange address &lt;networkAddress&gt; is not valid for this subnet &lt;subnet&gt;.\n\nRange address &lt;networkAddress&gt; already exists/overlaps for this subnet &lt;subnet&gt;.\n\nCannot save the zone &lt;zone&gt;: It already exists in database.\n"
                    },
                    "500": {
                        "description": "Invalid permissions for the requested operation.\n\nPermission Denied. You do not have appropriate privileges to perform this action for normal administrator.\n"
                    }
                }
            }
        },
        "/v1/{orgName}/zone{extension}": {
            "get": {
                "description": "Search zones by name. It just return basic information of Dns zone such as name, email, defaultTtl, exprireTime, nagativeCacheTtl, refreshTime and retryTime",
                "summary": "Search Zone",
                "operationId": "searchZone",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Zone"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml\n\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "Name of the zone for which you are searching.\nYou can use an asterisk (*) as a wildcard character to \nreturn a range of results. If you use the asterisk as \nthe first or only character, you must put this value in \neither single or double quotes.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "zoneType",
                        "description": "Type of the zone which you are searching.",
                        "default" :	"All",
                        "required": true,
                        "type": "string",
                        "enum" : ["All", "QIP Managed", "QIP Non-Managed", "Route 53"]
                    },
                    {
                        "in": "query",
                        "name": "pageIndex",
                        "description": "page index",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "Page size. Default value is 25.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DNSZoneRec"
                            }
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: &lt;name&gt;.\n"
                    },
                    "404": {
                        "description": "DNS Zone not found: [zoneName]"
                    }
                }
            }
        },
        "/v1/{orgName}/zone/{zoneName}{extension}": {
            "get": {
                "description": "Get full profile of a Dns zone by name",
                "summary": "Get Zone",
                "operationId": "getZone",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Zone"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml\n\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "zoneName",
                        "description": "Zone name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "zoneType",
                        "description": "Type of the zone which you are getting.\nRoute 53 is the type of Route 53 Hosted Zone\nQIP Managed is the type of the rest of zone in the QIP",
                        "default" :	"QIP Managed",
                        "required": true,
                        "type": "string",
                        "enum" : ["QIP Managed", "Route 53"]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DNSZoneRec"
                        }
                    },
                    "404": {
                        "description": "Zone [zoneName] Not Found\nRoute 53 Hosted Zone [zoneName] not found."
                    }
                }
            }
        },
        "/v1/{orgName}/zone/{name}/": {
            "delete": {
                "description": "Delete a global zone by name. The trailing slash is required.\n",
                "summary": "Delete a zone.",
                "operationId": "deleteZone",
                "tags": [
                    "Zone"
                ],
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Name of the zone being deleted.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "DNS Zone not found: &lt;dnsServer&gt;.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v6block": {
            "post": {
                "description": "Add V6 Block to V6 Pool.<br>\n*Note:* Should not test this API on Swagger. Please use another REST Client (cURL, Postman).",
                "operationId": "addV6BlockToPool",
                "summary": "Add V6 Block to V6 Pool",
                "tags": [
                    "V6 Block"
                ],
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V6BlockRec"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: [name]\n\nRequired Field(s) Missing: [address]\n\nRequired Field(s) Missing: [algorithmType]\n\nRequired Field(s) Missing: [prefixLength]\n\nRequired Field(s) Missing: [minPrefix]\n\nRequired Field(s) Missing: [maxPrefix]\n\nRequired Field(s) Missing: [defaultPrefix]\n\nRequired Field(s) Missing: [poolName]\n\nRequired Field(s) Missing: [createType]\n\nField value is not correct : [name=prefixLength]\n\nField value is not correct : [name=minPrefix]\n\nField value is not correct : [name=maxPrefix]\n\nField value is not correct : [name=defaultPrefix]\n\nField value is not correct : [name=createType]\n\nField value is not correct : [name=algorithmType]\n\nField value is not correct : [name=address]\n\nUDA &lt;udaName&gt;'s Value &lt;udaValue&gt; is not an valid Boolean Value.\n\nRequired input UDA Enabled QIP Type: &lt;udaName&gt; is invalid.\n\nInvalid Attribute(s): &lt;udaValue&gt;.\n\nUDA &lt;udaName&gt;'s Value &lt;udaValue&gt; is not an valid Integer Value.\n\nUDA &lt;udaName&gt;'s value &lt;udaValue&gt; is an invalid IP address.\n\nUDA &lt;uda&gt; is required.\n\nUDA &lt;uda&gt;'s value is required.\n\nUDA &lt;uda&gt; in group &lt;group&gt; is required.\n\nUDA &lt;uda&gt;'s value in group &lt;group&gt; is required.\n\nField value is not correct : [name=minPrefix|defaultPrefix|maxPrefix]\n\nField value is not correct : [name=minPrefix|maxPrefix]\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Pool not found: [name= &lt;poolName&gt;, parent= &lt;parentPoolName&gt;]\n\nUser Defined Attribute not found: [name= &lt;udaName&gt;].\n\nUDA group not found: [name= &lt;udaGroupName&gt;].\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Given Seed Block &lt;blockAddress&gt; already exists or has an overlap with\nSeed Block &lt;blockAddress&gt; in &lt;poolName&gt;\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Invalid permissions for the requested operation.\n\nUDA &lt;udaName&gt; is not associated with the given infrastructure.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify V6 Block",
                "operationId": "modifyV6Block",
                "summary": "Modify V6 Block",
                "tags": [
                    "V6 Block"
                ],
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V6BlockRec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Field value is not correct : [name=prefixLength]\n\nField value is not correct : [name=minPrefix]\n\nField value is not correct : [name=maxPrefix]\n\nField value is not correct : [name=defaultPrefix]\n\nField value is not correct : [name=createType]\n\nField value is not correct : [name=algorithmType]\n\nField value is not correct : [name=address]\n\nField value is not correct : [name=createType]\n\nUDA &lt;udaName&gt;'s Value &lt;udaValue&gt; is not an valid Boolean Value.\n\nRequired input UDA Enabled QIP Type: &lt;udaName&gt; is invalid.\n\nInvalid Attribute(s): &lt;udaValue&gt;.\n\nUDA &lt;udaName&gt;'s Value &lt;udaValue&gt; is not an valid Integer Value.\n\nUDA &lt;udaName&gt;'s value &lt;udaValue&gt; is an invalid IP address.\n\nUDA &lt;uda&gt; is required.\n\nUDA &lt;uda&gt;'s value is required.\n\nUDA &lt;uda&gt; in group &lt;group&gt; is required.\n\nUDA &lt;uda&gt;'s value in group &lt;group&gt; is required.\n\nCannot identify the ambiguous blocks. Found blocks &lt;blockAddress&gt; at: <br>Pool path &lt;poolPath&gt; with UUID &lt;UUID&gt;\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Pool not found: [name= &lt;pool&gt;, parent= &lt;parent&gt;]\n\nUser Defined Attribute not found: [name= &lt;udaName&gt;].\n\nUDA group not found: [name= &lt;udaGroupName&gt;].\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Given Seed Block &lt;blockAddress&gt; already exists or has an overlap with Seed Block &lt;blockAddress&gt; in &lt;poolName&gt;\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Invalid permissions for the requested operation\n\nUDA &lt;udaName&gt; is not associated with the given infrastructure.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v6block{extension}": {
            "get": {
                "description": "Search V6 Block by name or address. Wildcards are supported.<br>\n*Notes:* If the number of returned V6 Blocks is less than or equal to the page size, the page index parameter is not honored.",
                "summary": "Search V6 Block",
                "operationId": "searchV6Block",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Block"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml\n\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "Name of the block.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "address",
                        "description": "Address of the block (prefix/prefixlength).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "poolName",
                        "description": "Name of the parent pool.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "page size of response",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageIndex",
                        "description": "page index of response",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/V6BlockRec"
                            }
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: [name]\n\nRequired Field(s) Missing: [address]\n\nRequired Field(s) Missing: [poolName]\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Block not found\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v6block/{uuid}{extension}": {
            "get": {
                "description": "Get V6 Block by UUID",
                "summary": "Get V6 Block by UUID",
                "operationId": "getV6BlockByUUID",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Block"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml\n\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the block.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/V6BlockRec"
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: [uuid]\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Block not found\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v6block/{blockInfo}": {
            "delete": {
                "description": "Delete V6 Block by UUID or Name or Name and Pool Path.",
                "summary": "Delete V6 Block by UUID or Name or Name and Pool Path.",
                "operationId": "deleteV6BlockByBlockInfo",
                "tags": [
                    "V6 Block"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml\n\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "blockInfo",
                        "description": "blockInfo is UUID or blockName.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "poolPath",
                        "description": "Name of parent pool or Hierarchical path to the parent pool if parent pool name is not unique enough.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: [name]\n\nRequired Field(s) Missing: [address]\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Block not found\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Invalid permissions for the requested operation\n\nBlock name not unique. Use Block address to perform operation.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v6block/{blockAddress}/{prefixLength}": {
            "delete": {
                "description": "Delete V6 Block by Address.",
                "summary": "Delete V6 Block by Address.",
                "operationId": "deleteV6BlockByAddress",
                "tags": [
                    "V6 Block"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml\n\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "blockAddress",
                        "description": "Address of the block.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "prefixLength",
                        "description": "Prefixlength of address.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Cannot identify the ambiguous blocks. Found blocks &lt;blockAddress&gt; at: <br>Pool path &lt;poolPath&gt; with UUID &lt;UUID&gt;",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Block not found\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Invalid permissions for the requested operation.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v6block/assignment": {
            "put": {
                "description": "Assign V6 Block",
                "operationId": "assignV6Block",
                "summary": "Assign V6 Block",
                "tags": [
                    "V6 Block"
                ],
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V6BlockAssign"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: [targetPool]\n\nRequired Field(s) Missing: [sourcePool]\n\nRequired Field(s) Missing: [sourceBlock]\n\nRequired Field(s) Missing: [prefixLength]\n\nRequired Field(s) Missing: [assignmentType]\n\nRequired Field(s) Missing: [newBlockName]\n\nRequired Field(s) Missing: [assignAlgorithm]\n\nField value is not correct : [name=minPrefix]\n\nField value is not correct : [name=maxPrefix]\n\nField value is not correct : [name=defaultPrefix]\n\nField value is not correct : [name=createType]\n\nDefault prefix length missing or invalid range.\n\nDefault algorithm missing.\n\nStart address missing.\n\nPrefix length missing or invalid range.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Pool not found: [name= &lt;poolName&gt;, parent= &lt;parentPoolName&gt;]\n\nSource block does not exists.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Given Seed Block &lt;blockAddress&gt; already exists or has an overlap with Seed Block &lt;blockAddress&gt; in &lt;poolName&gt;\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Pool Name cannot be modified\n\nSource block does not belong to source pool.\n\nPool cannot assign block to ancestors.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v6pool{extension}": {
            "get": {
                "description": "Search V6 pool by name.",
                "summary": "Search V6 pool",
                "operationId": "searchV6Pool",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Pool"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml\n\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "Name of pool. Support * character.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "poolPath",
                        "description": "Name of parent pool or Hierarchical path to the parent pool if parent pool name is not unique enough.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "page size of response",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageIndex",
                        "description": "page index of response",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/V6PoolRec"
                            }
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: [name]\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Pool not found: [name= &lt;pool&gt;, parent= &lt;parent&gt;]\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v6pool/{uuid}{extension}": {
            "get": {
                "description": "Get V6 Pool by UUID",
                "summary": "Get V6 Pool by UUID",
                "operationId": "getV6PoolByUUID",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "V6 Pool"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "application/xml\n\napplication/json\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the pool",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/V6PoolRec"
                        }
                    },
                    "404": {
                        "description": "Pool not found: [UUID= &lt;uuid&gt;]\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v6pool": {
            "post": {
                "description": "Create V6 Pool. It will return the UUID.<br>\n*Note:* Should not test this API on Swagger. Please use another REST Client (cURL, Postman).",
                "operationId": "addV6Pool",
                "summary": "Create V6 Pool",
                "tags": [
                    "V6 Pool"
                ],
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "You don't need set value for parentName if you want to create a Seed Pool.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V6PoolRec"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: [name]\n\nRequired Field(s) Missing: [contact]\n\nRequired Field(s) Missing: [assignBlockType]\n\nRequired Field(s) Missing: [notificationType]\n\nRequired Field(s) Missing: [algorithmType]\n\nRequired Field(s) Missing: [minPrefix]\n\nRequired Field(s) Missing: [maxPrefix]\n\nRequired Field(s) Missing: [defaultPrefix]\n\nRequired Field(s) Missing: [blockReqType]\n\nField value is not correct : [name=assignBlockType]\n\nField value is not correct : [name=notificationType]\n\nField value is not correct : [name=algorithmType]\n\nField value is not correct : [name=minPrefix]\n\nField value is not correct : [name=maxPrefix]\n\nField value is not correct : [name=defaultPrefix]\n\nField value is not correct : [name=blockReqType]\n\nInvalid Email Addresses &lt;contact&gt; specified for the given Pool &lt;name&gt;\n\nInvalid Block Request Type.  Block Request Type &lt;blockReqType&gt; is not supported.\n\nInvalid Assign Request Type.  Assign Request Type &lt;assignBlockType&gt; is not supported.\n\nInvalid Notification Type.  Notification &lt;notificationType&gt; is not supported.\n\nInvalid Allocation Algorithm.  Algorithm &lt;algorithmType&gt; is not supported.\n\nUDA &lt;udaName&gt;'s Value &lt;udaValue&gt; is not an valid Boolean Value.\n\nRequired input UDA Enabled QIP Type: &lt;udaName&gt; is invalid.\n\nInvalid Attribute(s): &lt;udaValue&gt;.\n\nUDA &lt;udaName&gt;'s Value &lt;udaValue&gt; is not an valid Integer Value.\n\nUDA &lt;udaName&gt;'s value &lt;udaValue&gt; is an invalid IP address.\n\nUDA &lt;udaName&gt; is not associated with the given infrastructure.\n\nUDA Group &lt;udaGroupName&gt; is not associated with the given infrastructure.\n\nUDA &lt;uda&gt; is required.\n\nUDA &lt;uda&gt;'s value is required.\n\nUDA &lt;uda&gt; in group &lt;group&gt; is required.\n\nUDA &lt;uda&gt;'s value in group &lt;group&gt; is required.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Parent Pool does not exists.\n\nUser Defined Attribute not found: [name= &lt;udaName&gt;].\n\nUDA group not found: [name= &lt;udaGroupName&gt;].\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Pool name not unique: [name= &lt;poolName&gt;]\n\nThere is more than one address pool named &lt;poolName&gt;. Parent pool\nname is required.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Invalid permissions for the requested operation.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify V6 Pool",
                "operationId": "modifyV6Pool",
                "summary": "Modify V6 Pool",
                "tags": [
                    "V6 Pool"
                ],
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Add parentName to modify child pool<br> Remove parentName to modify seed pool.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V6PoolRec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Required Fields) Missing: [name]\n\nField value is not correct : [name=assignBlockType]\n\nField value is not correct : [name=notificationType]\n\nField value is not correct : [name=algorithmType]\n\nField value is not correct : [name=minPrefix]\n\nField value is not correct : [name=maxPrefix]\n\nField value is not correct : [name=defaultPrefix]\n\nField value is not correct : [name=blockReqType]\n\nUDA &lt;udaName&gt;'s Value &lt;udaValue&gt; is not an valid Boolean Value.\n\nRequired input UDA Enabled QIP Type: &lt;udaName&gt; is invalid.\n\nInvalid Attribute(s): &lt;udaValue&gt;.\n\nUDA &lt;udaName&gt;'s Value &lt;udaValue&gt; is not an valid Integer Value.\n\nUDA &lt;udaName&gt;'s value &lt;udaValue&gt; is an invalid IP address.\n\nUDA &lt;uda&gt; is required.\n\nUDA &lt;uda&gt;'s value is required.\n\nUDA &lt;uda&gt; in group &lt;group&gt; is required.\n\nUDA &lt;uda&gt;'s value in group &lt;group&gt; is required.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Pool not found: [name= &lt;poolName&gt;, parent= &lt;parentPoolName&gt;]\n\nUser Defined Attribute not found: [name= &lt;udaName&gt;].\n\nUDA group not found: [name= &lt;udaGroupName&gt;].\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Pool name not unique: [name= &lt;poolName&gt;] \n\nThere is more than one address pool named &lt;poolName&gt;. Parent pool\nname is required.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Invalid permissions for the requested operation.\n\nUDA &lt;udaName&gt; is not associated with the given infrastructure.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/v6pool/{poolInfo}": {
            "delete": {
                "description": "Delete V6 Pool. You can delete V6 Pool by pool name (FQDN) or UUID",
                "summary": "Delete V6 Pool",
                "operationId": "deleteV6Pool",
                "tags": [
                    "V6 Pool"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "poolInfo",
                        "description": "poolInfo can be poolName or UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "poolPath",
                        "description": "Name of parent pool or Hierarchical path to the parent pool if parent pool name is not unique enough.\n If poolInfo is uuid, we don't need this parameter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Required Field(s) Missing: [pool]\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Pool not found: [poolInfo = &lt;poolInfo&gt;, parent= &lt;parent&gt;]\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "There is more than one address pool named &lt;pool&gt;.  Parent pool name is required.\n\nUnable to delete V6 Pool - &lt;pool&gt; containing child pools or blocks\n\nPool cannot be deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
    "/v1/{orgName}/dns/generation{extension}": {
        "$ref": "infrastructures/dns-server.json#/generation"
    },
    "/v1/{orgName}/dns/{fqdn}{extension}": {
        "$ref": "infrastructures/dns-server.json#/getDNSServer"
    },
    "/v1/{orgName}/dns{extension}": {
        "$ref": "infrastructures/dns-server.json#/search"
    },
    "/v1/{orgName}/dns": {
        "$ref": "infrastructures/dns-server.json#/create"
    },
    "/v1/{orgName}/dns/{fqdn}/": {
        "$ref": "infrastructures/dns-server.json#/modify"
    },
    "/v1/{orgName}/dns/{serverFQDN}/": {
        "$ref": "infrastructures/dns-server.json#/deleteDNS"
    },
    "/v1/{orgName}/dns/serverZone{extension}": {
        "$ref": "infrastructures/dns-server.json#/getDNSServerZone"
    },
    "/v1/{orgName}/dns/{fqdn}/zones": {
        "$ref": "infrastructures/dns-server.json#/manage-zones"
    },
    "/v1/{orgName}/dhcp/generation{extension}": {
            "$ref": "infrastructures/dhcp-server.json#/generation"
    },
     "/v1/{orgName}/dhcp/scope": {
            "$ref": "infrastructures/dhcp-server.json#/scope"
    },
        "/v1/{orgName}/jobstatus{extension}": {
            "get": {
                "description": "Check the status of a DNS or DHCP generation using a token from the DNS or DHCP Generation response.",
                "operationId": "checkStatus",
                "summary": "Check status of a job",
                "tags": [
                    "Job Status"
                ],
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "token",
                        "description": "Token of the job you want to retrieve.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "extension",
                        "description": ".json for a response in JSON format.<br> \n.xml for a response in XML format.\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".xml"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JobInfo"
                        }
                    },
                    "404": {
                        "description": "Could not find job: [&lt;token&gt;]\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500":{
                        "description": "Internal Error.  Please contact System Administrator. Last unit does not have enough valid bits",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{orgName}/download/{token}": {
            "get": {
                "description": "Use this URL to download DNS and DHCP server configuration files.\n\nWhen using <b>cURL</b> with this API specify \"-o fileName.extension\" to download file contents.\n\nInternet Explorer browser users: to download the report please right click the <b>“Download file”</b> link and select <b>“Save as”</b> then input the desired file name with the correct extension.",
                "operationId": "download",
                "summary": "Download push configuration files",
                "tags": [
                    "Configuration File Download"
                ],
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Authentication",
                        "in": "header",
                        "description": "Token tokenValue<br>or<br>\nBasic username:password<br>or<br>\nLeave blank if using Client Certificate Authentication\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "application/json",
                            "application/xml"
                        ]
                    },
                    {
                        "in": "path",
                        "name": "orgName",
                        "description": "Organization Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "token",
                        "description": "Token of the server generation job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "files",
                        "description": "Name of individual file(s)s to be downloaded. Multiple files names must be separated by a comma (,). All available files are downloaded if this field is not specified. This field is not required.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "File compression type. Either \"zip\" or \"gzip\". This field is not required.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "zip",
                            "gzip"
                            
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "type":"file",
                        "headers": {
                            "Content-Type": {
                              "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid value: [&lt;token&gt;]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Could not find job: [&lt;token&gt;]\n\nFile doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/global/v1/utils/x509/decode": {
            "$ref": "infrastructures/utils.json#/decodeX509Certificate"
        },
        "/global/v1/utils/x509/generate": {
            "$ref": "infrastructures/utils.json#/generateKeyPair"
        },
        "/global/v1/samlidp": {
            "$ref": "infrastructures/saml-identity-provider.json#/createAndModify"
        },
        "/global/v1/samlidp/{samlIdpName}{extension}": {
            "$ref": "infrastructures/saml-identity-provider.json#/getByName"
        },
        "/global/v1/samlidp{extension}": {
            "$ref": "infrastructures/saml-identity-provider.json#/searchByName"
        },
        "/global/v1/samlidp/{samlIdpName}": {
            "$ref": "infrastructures/saml-identity-provider.json#/deleteByName"
        },
        "/global/v1/samlconfiguration": {
            "$ref": "infrastructures/saml-configuration.json#/update"
        },
        "/global/v1/samlconfiguration{extension}": {
            "$ref": "infrastructures/saml-configuration.json#/get"
        },
        "/global/v1/samlconfiguration/running{extension}": {
            "$ref": "infrastructures/saml-configuration.json#/getRunning"
        },
        "/v1/{orgName}/qip-search{extension}": {
            "$ref": "infrastructures/qip-search.json#/qipSearch"
        },
        "/v1/{orgName}/managed-tsigkey{extension}": {
            "$ref": "infrastructures/managed-tsigkey.json#get"
        },
        "/v1/{orgName}/managed-tsigkey": {
            "$ref": "infrastructures/managed-tsigkey.json#/change"
        },
        "/v1/{orgName}/admin/{loginName}{extension}": {
            "$ref": "infrastructures/admin.json#/getAdmin"
		},
        "/v1/{orgName}/admin{extension}": {
            "$ref": "infrastructures/admin.json#/searchAdmin"
		},
        "/v1/{orgName}/admin": {
            "$ref": "infrastructures/admin.json"
		},
        "/v1/{orgName}/admin/changePassword": {
            "$ref": "infrastructures/admin.json#/changePassword"
		},
		"/v1/{orgName}/admin/managedList{extension}": {
            "$ref": "infrastructures/admin-managed-list.json#/getManagedList"
		},
        "/v1/{orgName}/admin/managedList": {
            "$ref": "infrastructures/admin-managed-list.json"
		},
        "/v1/{orgName}/admin/report": {
            "$ref": "infrastructures/admin.json#/report"
        },
        "/v1/{orgName}/admin/role": {
            "$ref": "infrastructures/admin-role.json"
        },
        "/v1/{orgName}/admin/role{extension}": {
            "$ref": "infrastructures/admin-role.json#/search"
        },
        "/v1/{orgName}/admin/role/{adminRoleName}": {
            "$ref": "infrastructures/admin-role.json#/roleUpdateAndDelete"
        },
        "/v1/{orgName}/admin/role/{adminRoleName}/assignedAdmin{extension}": {
            "$ref": "infrastructures/admin-role.json#/assignedAdmin"
        },
        "/v1/{orgName}/admin/role/{adminRoleName}/managedList{extension}": {
            "$ref": "infrastructures/admin-role.json#/getManagedListD"
        },
        "/v1/{orgName}/admin/role/{adminRoleName}/managedList": {
            "$ref": "infrastructures/admin-role.json#/managedList"
        },
		 "/v1/{orgName}/movev4object": {
            "$ref": "infrastructures/move-v4-object.json"
        },
        "/v1/{orgName}/dhcpoptiontemplate": {
			"$ref": "infrastructures/dhcp-option-template.json"
		},
		"/v1/{orgName}/dhcpoptiontemplate/{infraType}{extension}": {
			"$ref": "infrastructures/dhcp-option-template.json#/getDHCPOptTmpl"
		},
		 "/v1/{orgName}/v6address/movev6object": {
            "$ref": "infrastructures/move-v6-object.json"
        },
		"/v1/{orgName}/dhcpoptiontemplate/searchoptiontmplbyoptnum{extension}": {
			"$ref": "infrastructures/dhcp-option-template.json#/searchDhcpOptionTmplByOptNum"
		},
		"/v1/{orgName}/dhcpoptiontemplate/searchoptiontmplbyname{extension}": {
			"$ref": "infrastructures/dhcp-option-template.json#/searchDhcpOptionTmplByName"
		},
		"/v1/{orgName}/zone/forwardedzone": {
			"$ref": "infrastructures/forwarded-zone.json"
		},
		"/v1/{orgName}/zone/forwardedzone/{forwardedZoneName}/": {
			"$ref": "infrastructures/forwarded-zone.json#/modifyDeleteForwardedZone"
		},
		"/v1/{orgName}/zone/forwardedzone/{forwardedZoneName}{extension}": {
			"$ref": "infrastructures/forwarded-zone.json#/getForwardedZone"
		}	
    },
    "definitions": {
        "Created": {
            "type": "object"
        },
        "OK": {
            "type": "object"
        },
        "Bad": {
            "type": "object",
            "description": "Bad request"
        },
        "NotFound": {
            "type": "object",
            "description": "Not found"
        },
        "Conflict": {
            "type": "object",
            "description": "Conflict"
        },
        "QIPUser": {
            "description": "QIPUser model",
            "type": "object",
            "required": [
                "username",
                "password"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "description": "QIP user name"
                },
                "password": {
                    "type": "string",
                    "description": "QIP user password"
                },
                "expires": {
                    "type": "integer",
                    "description": "The token expiration time, in seconds. \nDefault to expireTime (default 86400 seconds) if not set. Expiration time cannot exceed value of maxExpireTime (default 7776000 seconds) property. \nBoth expireTime and maxExpireTime are configured in qip.properties file."
                }
            }
        },
        "NextV4AddrRec": {
            "description": "NextV4AddrRec model",
            "type": "object",
            "properties": {
                "objectAddr": {
                    "type": "string"
                }
            }
        },
        "V6GetIpAddressRec": {
            "description": "V6GetIpAddressRec model",
            "type": "object",
            "properties": {
                "ipV6AddrStr": {
                    "type": "string"
                }
            }
        },
        "RRDeleteInfo": {
            "description": "RR model",
            "allOf": [
                {
                    "$ref": "#/definitions/RRRec"
                },
                {
                    "type": "object",
                    "required": [
                        "singleDelete"
                    ],
                    "properties": {
                        "singleDelete": {
                            "type": "boolean"
                        }
                    },
                    "example": {
		                "singleDelete": true
		            }
                }
            ]
        },
        "UdaRRRec" : {
        	"description":"abc",
        	"type":"object",
        		"allOf": [
        			{
        				"$ref": "#/definitions/RRRec"
        			},
        			{
        				"properties": {
        				"optionalAttributeList": {
        					"$ref": "#/definitions/UdaList"
        				}
        			},
        			"example": {
        				"optionalAttributeList" : {
        					"udas" : [
        						{
        							"name" : "at1",
        							"value" : "true"
        						},
        						{
        							"name" : "test",
        							"value" : "VitalQIP"
        						}
        					],
        					"groups" : [
        						{
        							"name" : "gr1",
        							"udas" : [
        								{
        									"name" : "at1",
        									"value" : "false"
        								}
        							]
        						},
        						{
        							"name" : "gr2",
        							"udas" : [
        								{
        									"name" : "testUDA",
        									"value" : "false"
        								}
        							]
        						}
        					]
        				}
        			}
        		}
        	]
        }
        ,
        "UpdateRRRec": {
            "description": "RR model",
            "type": "object",
            "required": [
                "oldRRRec",
                "updatedRRRec"
            ],
            "properties": {
                "oldRRRec": {
                    "$ref": "#/definitions/RRRec"
                },
                "updatedRRRec": {
                    "$ref": "#/definitions/UdaRRRec"
                }
            }
        },
        "RRRec": {
            "description": "RR model",
            "required": [
                "owner",
                "rrType",
                "infraType"
            ],
            "properties": {
                "owner": {
                    "type": "string",
                    "description": "Owner name for the resource record."
                },
                "classType": {
                    "type": "string",
                    "description": "Class type of records pertains to a type of network or software."
                },
                "rrType": {
                    "type": "string",
                    "description": "Type of resource record."
                },
                "data1": {
                    "type": "string",
                    "description": "The data associated with the specific resource record type."
                },
                "publishing": {
                    "type": "string",
                    "description": "Publishing type."
                },
                "ttl": {
                    "type": "string",
                    "description": "The length of time (in seconds) the name server will hold this information. If no TTL is defined, the value is inherited from the zone."
                },
                "infraType": {
                    "type": "string",
                    "description": "Type of infrastructure: OBJECT|V6ADDRESS|ZONE|V4REVERSEZONE|V6REVERSEZONE"
                },
                "infraFQDN": {
                    "type": "string",
                    "description": "Infrastrucutre FQDN."
                },
                "data2": {
                    "type": "string",
                    "description": "The data associated with the specific resource record type."
                },
                "data3": {
                    "type": "string",
                    "description": "The data associated with the specific resource record type."
                },
                "data4": {
                    "type": "string",
                    "description": "The data associated with the specific resource record type."
                },
                "infraAddr": {
                    "type": "string",
                    "description": "Address of infrastructure."
                },
                "isCreatingReverseZoneRR": {
                    "type": "boolean",
                    "description": "When creating or updating PTR resource record in Object/Node level, if this property is set to true, the PTR resource record will be created in Reverse zone. Otherwise, resource record will be created in Object as normally. Default value of this property is false. This property will be hidden when users get resource record."
                },
                "isDefaultRR": {
                    "type": "boolean",
                    "description": "This is read only field, true if the resource record is default resource record, otherwise false."
                }
            },
            "example": {
                "owner": "Owner1",
                "classType": "IN",
                "rrType": "PTR",
                "data1": "data1",
                "publishing": "ALWAYS",
                "ttl": 3200,
                "infraType": "OBJECT",
                "infraFQDN": "infraFQDN",
                "data2": "data2",
                "data3": "data3",
                "data4": "data4",
                "infraAddr": "192.168.88.1",
                "isCreatingReverseZoneRR": true,
                "isDefaultRR": false
            }
        },
        "V4NetworkRec": {
            "description": "V4 Network model",
            "required": [
                "address",
                "maskLength",
                "email",
                "warningPercent",
                "warningType"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "description": "V4 Network address"
                },
                "maskLength": {
                    "type": "integer",
                    "description": "Mask length of v4 network. This field is required when create, but must not be changed when modify"
                },
                "email": {
                    "type": "string",
                    "description": "email to contact. This field is required when create, but must not be changed when modify"
                },
                "warningPercent": {
                    "type": "integer",
                    "description": "Warning percent"
                },
                "warningType": {
                    "type": "string",
                    "description": "warnning type (1 or 2 or 3)"
                },
                "name": {
                    "type": "string",
                    "description": "Network name"
                },
                "dnsServer": {
                    "type": "string",
                    "description": "Name of DNS Server. This field is required when create, but must not be changed when modify"
                },
                "cidr": {
                    "type": "string",
                    "description": "CIDR (Y or N). This field is required when create, but must not be changed when modify"
                },
                "optionalAttributeList": {
                    "$ref": "#/definitions/UdaList"
                },
                "optionalAddrRangeList": {
                    "$ref": "#/definitions/AddrRangeList"
                }
            }
        },
        "UdaList": {
            "type": "object",
            "properties": {
                "udas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameValue"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UdaGroup"
                    }
                }
            }
        },
        "UdaGroup": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "udas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameValue"
                    }
                }
            }
        },
        "NameValue": {
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "AddrRangeList": {
            "type": "object",
            "properties": {
                "addrRange": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AddrRange"
                    }
                }
            }
        },
        "AddrRange": {
            "type": "object",
            "properties": {
                "startAddress": {
                    "type": "string"
                },
                "endAddress": {
                    "type": "string"
                }
            }
        },
        "V6SubnetRec": {
            "type": "object",
            "description": "V6 Subnet model",
            "required": [
                "name",
                "address",
                "type",
                "prefixLength",
                "rangePrefixLength"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "prefixLength": {
                    "type": "integer"
                },
                "domain": {
                    "$ref": "#/definitions/StringList"
                },
                "type": {
                    "$ref": "#/definitions/V6SubnetType"
                },
                "poolName": {
                    "type": "string"
                },
                "blockName": {
                    "type": "string"
                },
                "standPrimDHCPServer": {
                    "type": "string"
                },
                "failoverSecondDHCPServer": {
                    "type": "string"
                },
                "optTemplate": {
                    "type": "string"
                },
                "algorithmType": {
                    "$ref": "#/definitions/V6DefaultAlgorithmType"
                },
                "rangePrefixLength": {
                    "type": "integer"
                },
                "addressSelection": {
                    "$ref": "#/definitions/V6AddressSelectionType"
                },
                "dhcpParams": {
                    "$ref": "#/definitions/V6DhcpOptionsRec"
                }
            }
        },
        "StringList": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "V6SubnetType": {
            "type": "string",
            "enum": [
                "STATEFULL",
                "STATELESS"
            ]
        },
        "V6DefaultAlgorithmType": {
            "type": "string",
            "description": "depend on using Algorithm value for createSubnet",
            "enum": [
                "BEST_FIT_FROM_START",
                "BEST_FIT_FROM_END",
                "CONTIGUOUS_SPARSE",
                "SPARSE"
            ]
        },
        "V6AddressSelectionType": {
            "type": "string",
            "enum": [
                "NEXT_AVAILABLE",
                "RANDOM"
            ]
        },
        "V6DhcpOptionsRec": {
            "type": "object",
            "properties": {
                "informationRefreshTime": {
                    "type": "string"
                },
                "preferredLifeTime": {
                    "type": "string"
                },
                "rebindingTime": {
                    "type": "string"
                },
                "renewalTime": {
                    "type": "string"
                },
                "validLifeTime": {
                    "type": "string"
                },
                "bcmcsServerAddressList": {
                    "type": "string"
                },
                "bcmcsServerDomainNameList": {
                    "type": "string"
                },
                "dnsRecursiveNameServer": {
                    "type": "string"
                },
                "domainSearchList": {
                    "type": "string"
                },
                "nisServers": {
                    "type": "string"
                },
                "nispDomainName": {
                    "type": "string"
                },
                "panaAuthenticationAgents": {
                    "type": "string"
                },
                "posixTimeZone": {
                    "type": "string"
                },
                "sipServersDomainNameList": {
                    "type": "string"
                },
                "sipServersIpv6AddressList": {
                    "type": "string"
                },
                "sntpServers": {
                    "type": "string"
                },
                "tzdbTimeZone": {
                    "type": "string"
                },
                "vendorOptions": {
                    "type": "string"
                }
            }
        },
        "V6CreateSubnetRec": {
            "type": "object",
            "required": [
                "poolName",
                "blockName",
                "prefixLength",
                "createReverseZone",
                "createSubnet",
                "subnetPrefixLength",
                "blockAddress",
                "algorithmType"
            ],
            "properties": {
                "poolName": {
                    "type": "string"
                },
                "blockName": {
                    "type": "string"
                },
                "blockAddress": {
                    "type": "string"
                },
                "prefixLength": {
                    "type": "integer"
                },
                "subnetPrefixLength": {
                    "type": "integer"
                },
                "subnetName": {
                    "type": "string",
                    "description": "depend on using Specific value for createSubnet"
                },
                "subnetAddress": {
                    "type": "string",
                    "description": "depend on using Specific value for createSubnet"
                },
                "subnetsNo": {
                    "type": "integer",
                    "description": "depend on using Algorithm value for createSubnet. That is the number of subnet will be created by 1 request"
                },
                "createSubnet": {
                    "$ref": "#/definitions/V6CreateSubnetType"
                },
                "algorithmType": {
                    "$ref": "#/definitions/V6DefaultAlgorithmType"
                },
                "createReverseZone": {
                    "$ref": "#/definitions/V6CreateReverseZone"
                },
                "domains": {
                    "$ref": "#/definitions/StringList"
                }
            }
        },
        "V6CreateSubnetType": {
            "type": "string",
            "enum": [
                "ALGORITHM",
                "SPECIFIC"
            ]
        },
        "V6CreateReverseZone": {
            "type": "string",
            "enum": [
                "TRUE",
                "FALSE"
            ]
        },
        "V6AddressRec": {
            "type": "object",
            "required": [
                "hostName",
                "domainName",
                "rangeAddress",
                "address",
                "addressType",
                "range",
                "publishA",
                "publishPTR",
                "classType"
            ],
            "properties": {
                "hostName": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string"
                },
                "rangeAddress": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "newAddress": {
                    "type": "string"
                },
                "iaid": {
                    "type": "string"
                },
                "addressType": {
                    "$ref": "#/definitions/V6AddressType"
                },
                "range": {
                    "type": "string"
                },
                "subnet": {
                    "type": "string"
                },
                "publishA": {
                    "$ref": "#/definitions/V6PublishType"
                },
                "publishPTR": {
                    "$ref": "#/definitions/V6PublishType"
                },
                "ttl": {
                    "type": "integer"
                },
                "nodeName": {
                    "type": "string"
                },
                "classType": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                },
                "useMACAddress": {
                    "type": "boolean"
                },
                "macAddress": {
                    "type": "string"
                }
            }
        },
        "V6AddressType": {
            "type": "string",
            "enum": [
                "STATIC",
                "MANUAL"
            ]
        },
        "V6PublishType": {
            "type": "string",
            "enum": [
                "ALWAYS",
                "NEVER",
                "PUSH_ONLY"
            ]
        },
        "V6RangeRec": {
            "type": "object",
             "required": [
                "name",
                "rangePrefixLength",
                "subnetAddress",
                "subnetPrefixLength",
                "rangeType",
                "addressSelection"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "startAddress": {
                    "type": "string"
                },
                "newStartAddress": {
                    "type": "string"
                },
                "rangePrefixLength": {
                    "type": "integer"
                },
                "rangeType": {
                    "$ref": "#/definitions/V6RangeType"
                },
                "standPrimDHCPServer": {
                    "type": "string"
                },
                "failoverSecondDHCPServer": {
                    "type": "string"
                },
                "optTemplate": {
                    "type": "string"
                },
                "addressSelection": {
                    "$ref": "#/definitions/V6AddressSelectionType"
                },
                "subnetName": {
                    "type": "string"
                },
                "subnetAddress": {
                    "type": "string"
                },
                "subnetPrefixLength": {
                    "type": "integer"
                },
                "dhcpParams": {
                    "$ref": "#/definitions/V6DhcpOptionsRec"
                },
                "udas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameValue"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UdaGroup"
                    }
                }
            }
        },
        "V6RangeType": {
            "type": "string",
            "enum": [
                "DYNAMIC",
                "FIXED",
                "RESERVED",
                "DYNAMIC_TEMPORARY"
            ]
        },
        "V4AddrRec": {
            "type": "object",
            "required": [
                "objectAddr",
                "subnetAddr"
            ],
            "properties": {
                "objectAddr": {
                    "type": "string",
                    "description": "The hostname of the object. Not fully-qualified."
                },
                "subnetAddr": {
                    "type": "string"
                },
                "objectName": {
                    "type": "string"
                },
                "objectClass": {
                    "type": "string",
                    "description": "ObjectClass is a value of  Workstation, X-terminal, PC, Printer, Server, Wiring_HUB, Router, Bridge, Terminal_Server, Switch, Legacy_System, Gateway, Test_Equipment, Undefined, Others, Any user-defined object class name."
                },
                "domainName": {
                    "type": "string",
                    "description": "The domain of the object. If no value is provided, the Domain Name is identified as the default domain of the subnet the Object is on."
                },
                "expiredDate": {
                    "type": "string",
                    "description": "The date when a reserved object expires and is no longer reserved."
                },
                "serverType": {
                    "type": "string",
                    "description": "Only applicable if ObjectClass is 'server': TimeServer- If object is a time server, TftpServer- If object is a Tftp server, TftpServer\\&TimeServer- If object is a TftpServer and TimeServer.\n"
                },
                "applName": {
                    "type": "string",
                    "description": "The 'Primary Application' of the object."
                },
                "objectTag": {
                    "type": "string",
                    "description": "Tag field"
                },
                "roomId": {
                    "type": "string",
                    "description": "Room ID field"
                },
                "manufacturer": {
                    "type": "string",
                    "description": "Manufacturer Name"
                },
                "modelType": {
                    "type": "string",
                    "description": "Model Name"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "Serial Number of Object"
                },
                "assetNumber": {
                    "type": "string",
                    "description": "Asset Number of object"
                },
                "hostId": {
                    "type": "string",
                    "description": "Host ID of object"
                },
                "purchaseDate": {
                    "type": "string",
                    "description": "Purchase Date/Time of object. Must be in yyyy-mm-dd format"
                },
                "objectDesc": {
                    "type": "string",
                    "description": "Object Description"
                },
                "hubName": {
                    "type": "string",
                    "description": "Hub Name(s) assigned to object."
                },
                "slotName": {
                    "type": "string",
                    "description": "Slot Name(s) assigned to object."
                },
                "portNumber": {
                    "type": "string",
                    "description": "Port Numbers assigned to object."
                },
                "locationId": {
                    "type": "string",
                    "description": "The Location ID. If no Location ID is specified, an attempt is made to match the record EXACTLY with the Street1, Street2, City, State, Zip and/or Country information that is supplied. If a match is not found, a new record is added without an ID."
                },
                "street1": {
                    "type": "string",
                    "description": "Street1 field of the location."
                },
                "street2": {
                    "type": "string",
                    "description": "Street2 field of the location."
                },
                "city": {
                    "type": "string",
                    "description": "City of the location."
                },
                "state": {
                    "type": "string",
                    "description": "State of the location."
                },
                "zip": {
                    "type": "string",
                    "description": "Zip of the location."
                },
                "country": {
                    "type": "string",
                    "description": "Country of the location."
                },
                "contactId": {
                    "type": "string",
                    "description": "The Contact ID. If no Contact ID is specified, an attempt is made to match the record EXACTLY with the ContactLastName and ContactFirstName information that is supplied. If no match is found, a new record is added without an ID."
                },
                "contactLastName": {
                    "type": "string",
                    "description": "Contact last name."
                },
                "contactFirstName": {
                    "type": "string",
                    "description": "Contact first name."
                },
                "contactEmail": {
                    "type": "string",
                    "description": "Contact email address."
                },
                "contactPhone": {
                    "type": "string",
                    "description": "Contact phone number."
                },
                "contactPager": {
                    "type": "string",
                    "description": "Contact pager number."
                },
                "routerGroup": {
                    "type": "string",
                    "description": "Router Group of object. Only applicable if the object class is \"router\"."
                },
                "dynamicConfig": {
                    "type": "string",
                    "description": "Dynamic Configuration of Object include Blank - Static object, None- Dynamic (none), M-DHCP- Manual DHCP, A-DHCP- Automatic DHCP, D-DHCP- Dynamic DHCP, M-BOOTP- Manual Bootp,  A-BOOTP- Automatic Bootp, Reserved - To reserve an object (the IP must be unused)"
                },
                "macAddr": {
                    "type": "string",
                    "description": "The Mac Address of Object. Exclude the colons (:) when entering a MAC address."
                },
                "tftpServer": {
                    "type": "string",
                    "description": "TFTP Server of object. Only applicable if object type is M-BOOTP."
                },
                "bootFileName": {
                    "type": "string",
                    "description": "Bootfile name of object. Only applicable if object type is MBOOTP."
                },
                "hardwareType": {
                    "type": "string",
                    "description": "NONE, ETHERNET, TOKEN_RING, AX25, PRONET, CHAOS, IEEE802, ARCNET."
                },
                "aliases": {
                    "type": "string"
                },
                "mailForwarders": {
                    "type": "string"
                },
                "mailHosts": {
                    "type": "string"
                },
                "hubSlots": {
                    "type": "string"
                },
                "dnsServers": {
                    "type": "string",
                    "description": "DNS Servers attached to this object. If multiple, separate by space. Only applicable for M-BOOTP objects."
                },
                "timeServers": {
                    "type": "string",
                    "description": "Time Servers attached to this object. If multiple, separate by space. Only applicable for M-BOOTP objects."
                },
                "defaultRouters": {
                    "type": "string",
                    "description": "IP Address(es) of Default routers, separated by space if multiples."
                },
                "userClasses": {
                    "type": "string",
                    "description": "Specific categories of user options. To enter one or more user classes for this object, enclose a list of users in double quotes (for example, user1, user2, user3)."
                },
                "users": {
                    "type": "string"
                },
                "nameService": {
                    "type": "string",
                    "description": "Name Services selection:\n- No: Name Services checked off.\n- Yes: Name Services checked on.\n- A: Name Services checked on, A record checked on.\n- PTR: Name Services checked on, PTR record checked on.\n- A PTR: Name Services checked on, A record checked on, PTR record checked on.\n"
                },
                "dynamicDnsUpdate": {
                    "type": "string",
                    "description": "Dynamic Update selection:\n  - A- Dynamic updates for A records.\n  - PTR- Dynamic updates for PTR records.\n  - CNAME- Dynamic updates for CNAME records.\n  - MX- Dynamic updates for MX records.\n"
                },
                "dhcpServer": {
                    "type": "string",
                    "description": "The DHCP Server assigned to this object. Only applicable for dynamic objects."
                },
                "dhcpOptionTemplate": {
                    "type": "string",
                    "description": "The DHCP Option Template assigned to this object. Only applicable for dynamic objects."
                },
                "dhcpPolicyTemplate": {
                    "type": "string",
                    "description": "The DHCP Policy template assigned to this object. Only applicable for dynamic objects."
                },
                "leaseTime": {
                    "type": "string",
                    "description": "The lease time (in seconds assigned) to this object. Only applicable for dynamic objects."
                },
                "ttlTime": {
                    "type": "string",
                    "description": "Time to live (TTL) value, in seconds. Since 0 is a valid value, a value of-1 indicates no TTL set."
                },
                "vendorClass": {
                    "type": "string",
                    "description": "The Vendor Class assigned to this object. Only applicable for dynamic objects."
                },
                "clientId": {
                    "type": "string",
                    "description": "The unique value assigned to DHCP client."
                },
                "dualProtocol": {
                    "type": "string"
                },
                "decNetArea": {
                    "type": "string",
                    "description": "DECNet Area. (Valid values are 1-63) Only applicable if Dual Protocol is set to DECNet. The DECNet Address is calculated on the input in the DECNetArea and the DECNet Node."
                },
                "decNetAddr": {
                    "type": "string",
                    "description": "DECNet Address. (Valid values are 1-1024) Only applicable if Dual Protocol set to DECNet. The DECNet Address is calculated on the input in the DECNetArea and the DECNet Node."
                },
                "decNetNode": {
                    "type": "string"
                },
                "talkType": {
                    "type": "string"
                },
                "ipxNode": {
                    "type": "string",
                    "description": "IPX Node. Only applicable if Dual Protocol is set to IPX."
                },
                "ipxNetworkNumber": {
                    "type": "string",
                    "description": "IPX Network number. Only applicable if Dual Protocol is set to IPX."
                },
                "netBiosDomain": {
                    "type": "string",
                    "description": "NetBIOS Name. Only applicable when dual protocol is set to NETBIOS."
                },
                "netBiosName": {
                    "type": "string",
                    "description": "NetBIOS Domain. Only applicable when dual protocol set to NETBIOS."
                },
                "usageBillServices": {
                    "type": "string"
                },
                "usageBillLocation": {
                    "type": "string"
                },
                "usageBillUserGroup": {
                    "type": "string"
                },
                "usageBillObjectClass": {
                    "type": "string"
                },
                "allowModifyDynamicRRs": {
                    "type": "string"
                },
                "tombstoned": {
                    "type": "string",
                    "description": "1 indicates that this is a tombstoned external record. 0 indicates that it is not a tombstoned external record.\n"
                },
                "externalComment": {
                    "type": "string",
                    "description": "text (up to 255 characters), a comment indicating the history of this external add."
                },
                "externalTimestamp": {
                    "type": "string",
                    "description": "ExternalTimestamp must be in \"yyyy-mm-dd\" format"
                },
                "manualFlag": {
                    "type": "string",
                    "description": "Determines whether MACAddress/ClientID is set based on its value. If value is 0, MACAddress is set, if value is 1, ClientID is set."
                },
                "nodeId": {
                    "type": "string"
                },
                "uniqueNodeId": {
                    "type": "string"
                },
                "aTTL": {
                    "type": "string"
                },
                "ptrTTL": {
                    "type": "string"
                },
                "publishA": {
                    "type": "string",
                    "description": "A resource record option (Always | None | Push Only)."
                },
                "publishPTR": {
                    "type": "string",
                    "description": "PTR resource record option (Always | None | Push Only)."
                },
                "dhcpClientClass": {
                    "type": "string"
                },
                "isUpdate": {
                    "type": "string"
                },
                "isAddSelected": {
                    "type": "string"
                },
                "isCheckDupName": {
                    "type": "string"
                },
                "isCheckOnlyFQDNDups": {
                    "type": "string"
                },
                "isSwapAliasAndObjectName": {
                    "type": "string"
                },
                "localManualFlag": {
                    "type": "string"
                }
            }
        },
        "V4AddressesRec": {
            "type": "object",
            "required": [
                "objectAddr"
            ],
            "properties": {
                "objectAddr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "v4AddrRec" : {
                    "$ref": "#/definitions/V4AddrRec"
                }
            }
        },
        "SplitV4AlterSubnetRec": {
            "type": "object",
            "required": [
                "fromSubnet",
                "toSubnets",
                "newMask"
            ],
            "properties": {
                "fromSubnet": {
                    "type": "string"
                },
                "toSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "newMask": {
                    "type": "string"
                }
            }
        },
        "JoinV4AlterSubnetRec": {
            "type": "object",
            "required": [
                "fromSubnets",
                "toSubnet",
                "newMask"
            ],
            "properties": {
                "fromSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "toSubnet": {
                    "type": "string"
                },
                "newMask": {
                    "type": "string"
                },
                "subnetProperties": {
                    "type": "string"
                }
            }
        },
        "V4SubnetRec": {
            "type": "object",
            "required": [
                "subnetAddress",
                "subnetMask",
                "networkAddress"
            ],
            "properties": {
                "subnetAddress": {
                    "type": "string"
                },
                "subnetMask": {
                    "type": "string"
                },
                "networkAddress": {
                    "type": "string"
                },
                "subnetName": {
                    "type": "string"
                },
                "subnetOrg": {
                    "type": "string"
                },
                "application": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/LocationRec"
                },
                "contact": {
                    "$ref": "#/definitions/ContactRec"
                },
                "hardwareType": {
                    "$ref": "#/definitions/HwType"
                },
                "tftpServerName": {
                    "type": "string"
                },
                "allowDHCPClientsToModifyDynamicObjectRRs": {
                    "$ref": "#/definitions/ModifyRrsType"
                },
                "domains": {
                    "$ref": "#/definitions/StringList"
                },
                "showUsage": {
                    "type": "string"
                },
                "checkUsage": {
                    "type": "string"
                },
                "subnetDescription": {
                    "type": "string"
                },
                "sharedNetwork": {
                    "type": "string"
                },
                "warningType": {
                    "type": "integer"
                },
                "warningPercentage": {
                    "type": "integer"
                },
                "preferredDNSServers": {
                    "$ref": "#/definitions/StringList"
                },
                "preferredTimeServers": {
                    "$ref": "#/definitions/StringList"
                },
                "defaultRouters": {
                    "$ref": "#/definitions/StringList"
                },
                "defaultDHCPServer": {
                    "type": "string"
                },
                "defaultDHCPOptionTemplate": {
                    "type": "string"
                },
                "defaultDHCPPolicyTemplate": {
                    "type": "string"
                },
                "primaryInterface": {
                    "type": "boolean"
                },
                "optionalAttributeList": {
                    "$ref": "#/definitions/UdaList"
                },
                "addressTemplate": {
                    "type": "string"
                },
                "localTotalDynamicObjects": {
                    "type": "integer"
                },
                "localLeasedDynamicObjects": {
                    "type": "integer"
                },
                "localPercentDynamicObjectsUsed": {
                    "type": "number"
                }
            }
        },
        "ModifyRrsType": {
            "type": "string",
            "enum": [
                "SAME_AS_IN_GLOBAL_POLICIES",
                "YES",
                "NO"
            ]
        },
        "HwType": {
            "type": "string",
            "enum": [
                "ETHERNET",
                "TOKEN_RING",
                "AX25",
                "PRONET",
                "CHAOS",
                "IEEE802",
                "ARCNET"
            ]
        },
        "LocationRec": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "street1": {
                    "type": "string"
                },
                "street2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                }
            }
        },
        "ContactRec": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                },
                "pager": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "DNSServer": {
            "type": "object",
            "description": "Name of DNS server",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "role": {
                    "type": "string",
                    "description": "Primary/Secondary DNS Server:\nWith P is for Primary and S is for Secondary\n"
                },
                "secureUpdate": {
                    "type": "boolean",
                    "description": "1 is turn on the flag of sending secure update 0 is not"
                }
            }
        },
        "DNSZoneSubOption": {
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "value": {
                    "type": "string",
                    "description": "value"
                }
            }
        },
        "DNSZoneOption": {
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "value": {
                    "type": "string",
                    "description": "value"
                },
                "subOption": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSZoneSubOption"
                    }
                }
            }
        },
        "DNSZoneOptionGroups": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "option": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSZoneOption"
                    }
                }
            }
        },
        "DNSZoneRec": {
            "type": "object",
            "required": [
                "name",
                "email",
                "expireTime",
                "negativeCacheTtl",
                "refreshTime",
                "retryTime",
                "defaultTtl"
            ],
            "description": "This section defines a group of operations for adding a global zone. Different messages, \nand capabilities, are provided to handle the adding. Add, Get and Update actions support \nare supported. \n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the zone.\n"
                },
                "newName": {
                    "type": "string",
                    "description": "New name of the zone. This is used for updating a new name for a zone.\n"
                },
                "parentAddress": {
                    "type": "string",
                    "description": "Parent address of the splitted reverse zone.\n"
                },
                "networkAddress": {
                    "type": "string",
                    "description": "Network address of the reverse zone.\n"
                },
                "dnsServers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSServer"
                    }
                },
                "defaultTtl": {
                    "type": "integer",
                    "description": "DNS default TTL.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email contact.\n"
                },
                "expireTime": {
                    "type": "integer",
                    "description": "Email contact.\n"
                },
                "negativeCacheTtl": {
                    "type": "integer",
                    "description": "DNS negative cache TTL.\n"
                },
                "postfixZoneExtension": {
                    "type": "string",
                    "description": "DNS postfix extension.\n"
                },
                "prefixZoneExtension": {
                    "type": "string",
                    "description": "DNS prefix extention.\n"
                },
                "refreshTime": {
                    "type": "integer",
                    "description": "DNS refresh time. \n"
                },
                "retryTime": {
                    "type": "integer",
                    "description": "DNS retry time.\n"
                },
                "udas": {
                    "$ref": "#/definitions/NameValue"
                },
                "groups": {
                    "$ref": "#/definitions/UdaGroup"
                },
                "dnsZoneOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSZoneOptionGroups"
                    }
                }
            },
            "example": {
                "name": "nokia.com",
                "dnsServers": [
                    {
                        "name": "dns.example.com",
                        "role": "P",
                        "secureUpdate": false
                    },
                    {
                        "name": "dnsSecondary.example.com",
                        "role": "S",
                        "secureUpdate": false
                    },
                    {
                        "name": "zone1.example.com",
                        "role": "P",
                        "secureUpdate": true
                    },
                    {
                        "name": "dnsSecondary.example.com",
                        "role": "S",
                        "secureUpdate": false
                    }
                ],
                "defaultTtl": 86400,
                "email": "support@nokia.com",
                "expireTime": 604800,
                "negativeCacheTtl": 600,
                "refreshTime": 21600,
                "retryTime": 3600,
                "udas": [
                    {
                        "name": "at1",
                        "value": "true"
                    },
                    {
                        "name": "test",
                        "value": "vietnam"
                    }
                ],
                "groups": [
                    {
                        "name": "gr1",
                        "udas": [
                            {
                                "name": "at1",
                                "value": "false"
                            }
                        ]
                    },
                    {
                        "name": "gr2",
                        "udas": [
                            {
                                "name": "testUDA",
                                "value": "false"
                            }
                        ]
                    }
                ],
                "dnsZoneOptions": [
                    {
                        "name": "Extensions",
                        "options": [
                            {
                                "name": "Prefix of zone db file",
                                "value": "Zone prefix comments"
                            },
                            {
                                "name": "Postfix of zone db file",
                                "value": "Zone postfix comments"
                            }
                        ]
                    },
                    {
                        "name": "ALU DNS 6.0 Options",
                        "options": [
                            {
                                "name": "allow-transfer",
                                "value": "Use Server Value",
                                "subOptions": [
                                    {
                                        "name": "other"
                                    },
                                    {
                                        "name": "ACL Templates"
                                    }
                                ]
                            },
                            {
                                "name": "allow-notify",
                                "value": "Any",
                                "subOptions": [
                                    {
                                        "name": "other"
                                    },
                                    {
                                        "name": "ACL Templates"
                                    }
                                ]
                            },
                            {
                                "name": "zone block of named.conf",
                                "value": "zone block of named.conf comments"
                            },
                            {
                                "name": "Import External Updates",
                                "value": "True",
                                "subOptions": [
                                    {
                                        "name": "CNAME (Canonical Name)",
                                        "value": "True"
                                    },
                                    {
                                        "name": "AAAA (Host IPV6)",
                                        "value": "True"
                                    },
                                    {
                                        "name": "SRV (Server Resource Record)",
                                        "value": "True"
                                    },
                                    {
                                        "name": "A (Host IPV4)",
                                        "value": "True"
                                    },
                                    {
                                        "name": "PTR (Pointer)",
                                        "value": "True"
                                    },
                                    {
                                        "name": "TXT (Text)",
                                        "value": "True"
                                    }
                                ]
                            },
                            {
                                "name": "allow-query",
                                "value": "Use Server Value",
                                "subOptions": [
                                    {
                                        "name": "other"
                                    },
                                    {
                                        "name": "ACL Templates"
                                    }
                                ]
                            },
                            {
                                "name": "forwarders",
                                "subOptions": [
                                    {
                                        "name": "forward",
                                        "value": "Use Server Value"
                                    }
                                ]
                            },
                            {
                                "name": "allow-update",
                                "value": "Use Server Value",
                                "subOptions": [
                                    {
                                        "name": "other"
                                    },
                                    {
                                        "name": "ACL Templates"
                                    }
                                ]
                            },
                            {
                                "name": "notify",
                                "value": "No",
                                "subOptions": [
                                    {
                                        "name": "also-notify"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        "V6BlockRec": {
            "type": "object",
            "required": [
                "name",
                "address",
                "prefixLength",
                "algorithmType",
                "poolName",
                "minPrefix",
                "maxPrefix",
                "defaultPrefix",
                "createType"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Block"
                },
                "address": {
                    "type": "string",
                    "description": "IPv6 address"
                },
                "prefixLength": {
                    "type": "integer",
                    "description": "Length of the seed block"
                },
                "minPrefix": {
                    "type": "integer",
                    "description": "Smallest block that can be assigned"
                },
                "maxPrefix": {
                    "type": "integer",
                    "description": "Largest block that can be assigned"
                },
                "defaultPrefix": {
                    "type": "integer",
                    "description": "Default size of the block assigned"
                },
                "algorithmType": {
                    "type": "string",
                    "description": "BEST_FIT_FROM_START | BEST_FIT_FROM_END | SPARSE | CONTIGUOUS_SPARSE\n"
                },
                "poolName": {
                    "type": "string",
                    "description": "Name of the pool"
                },
                "createType": {
                    "type": "integer",
                    "description": "Keep value as 1 which refers to user initiated operation. It's required when create a V6Block\n"
                },
                "createReverseZone": {
                    "type": "boolean",
                    "description": "true for create V6 Reverse Zone and vice versa (default is true)."
                },
                "isReservedBlock": {
                	"type":"boolean",
                	"description": "create reserved block (default is false)"
                },
                "udas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameValue"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UdaGroup"
                    }
                }
            },
            "example": {
                "name": "B1",
                "address": "4000::",
                "prefixLength": "48",
                "minPrefix": "64",
                "maxPrefix": "48",
                "defaultPrefix": "56",
                "algorithmType": "BEST_FIT_FROM_START",
                "poolName": "P1",
                "createType": 1,
                "createReverseZone": false,
                "isReservedBlock": false,
                "udas": [
                    {
                        "name": "atb1",
                        "value": true
                    }
                ],
                "groups": [
                    {
                        "name": "grp1",
                        "udas": [
                            {
                                "name": "atb1",
                                "value": true
                            }
                        ]
                    }
                ]
            }
        },
        "V6BlockAssign": {
            "type": "object",
            "required": [
                "targetPool",
                "sourcePool",
                "sourceBlock",
                "assignmentType",
                "assignAlgorithm",
                "prefixLength",
                "newBlockName",
                "defaultPrefixLength",
                "startAddress"
            ],
            "properties": {
                "targetPool": {
                    "type": "string",
                    "description": "Name of target pool."
                },
                "sourcePool": {
                    "type": "string",
                    "description": "Name of source pool."
                },
                "sourceBlock": {
                    "type": "string",
                    "description": "Name of source block."
                },
                "assignmentType": {
                    "type": "string",
                    "description": "Method of assignment."
                },
                "assignAlgorithm": {
                    "type": "string",
                    "description": "Assignment algorithm used in the block."
                },
                "prefixLength": {
                    "type": "integer",
                    "description": "Size of the assigned block."
                },
                "newBlockName": {
                    "type": "string",
                    "description": "Name of the block assigned."
                },
                "defaultAlgorithm": {
                    "type": "string",
                    "description": "Assignment algorithm."
                },
                "defaultPrefixLength": {
                    "type": "integer",
                    "description": "Size of the assigned block."
                },
                "startAddress": {
                    "type": "string",
                    "description": "IP Address string."
                },
                "createReverseZone": {
                    "type": "boolean",
                    "description": "true for create V6 Reverse Zone and vice versa (default is false). Support both quotation marks and non-quotation marks"
                }
            },
            "example": {
                "targetPool": "poolB",
                "sourcePool": "poolA",
                "sourceBlock": "myBlock",
                "assignmentType": "ALGORITHM",
                "assignAlgorithm": "BEST_FIT_FROM_START",
                "prefixLength": 48,
                "newBlockName": "assignedBlock",
                "createReverseZone": "true"
            }
        },
        "V6PoolRec": {
            "type": "object",
            "required": [
                "name",
                "contact",
                "assignBlockType",
                "notificationType",
                "algorithmType",
                "minPrefix",
                "maxPrefix",
                "defaultPrefix"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the pool.\nYou should not enter a pool name with the last character is \\ \n\nThis will make the parent pool name get parsed incorrectly.\n"
                },
                "newName": {
                    "type": "string",
                    "description": "Name of the pool - support change name of pool.\n"
                },
                "fullQualifiedParentPoolName": {
                    "type": "string",
                    "description": "full Qualified Parent name of Pool"
                },
                "parentName": {
                    "type": "string",
                    "description": "Name of parent pool.\nIf you want the / character to be a part of the pool name, it must be escaped using slash \\ character.\n"
                },
                "contact": {
                    "type": "string",
                    "description": "E-mail ID of the contact"
                },
                "assignBlockType": {
                    "type": "string",
                    "description": "APPROVAL_REQUIRED AUTOMATIC_ASSIGNMENT\n"
                },
                "notificationType": {
                    "type": "string",
                    "description": "NONE REQUESTS_AND_ASSIGNMENTS REQUESTS_ONLY ASSIGNMENTS_ONLY\n"
                },
                "algorithmType": {
                    "type": "string",
                    "description": "BEST_FIT_FROM_START BEST_FIT_FROM_END SPARSE\n"
                },
                "minPrefix": {
                    "type": "integer",
                    "description": "Smallest block that can be assigned"
                },
                "maxPrefix": {
                    "type": "integer",
                    "description": "Largest block that can be assigned"
                },
                "defaultPrefix": {
                    "type": "integer",
                    "description": "Default size of the block assigned"
                },
                "blockReqType": {
                    "type": "string",
                    "description": "MANUAL_PARENT_REQUEST AUTOMATIC_PARENT_REQUEST\n"
                },
                "createReverseZone": {
                    "type": "boolean",
                    "description": "true for create V6 Reverse Zone and vice versa (default is false)."
                },
                "udas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameValue"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UdaGroup"
                    }
                }
            },
            "example": {
                "name": "ChildPool1",
                "parentName": "Pool1",
                "fullQualifiedParentPoolName": "Pool/Pool1",
                "contact": "restapi@example.com",
                "blockReqType": "MANUAL_PARENT_REQUEST",
                "assignBlockType": "APPROVAL_REQUIRED",
                "notificationType": "REQUESTS_AND_ASSIGNMENTS",
                "algorithmType": "BEST_FIT_FROM_START",
                "minPrefix": "64",
                "maxPrefix": "48",
                "defaultPrefix": "56",
                "createReverseZone": true,
                "udas": [
                    {
                        "name": "atb1",
                        "value": true
                    }
                ],
                "groups": [
                    {
                        "name": "grp1",
                        "udas": [
                            {
                                "name": "atb1",
                                "value": true
                            }
                        ]
                    }
                ]
            }
        },
        "AlertRec": {
            "type": "object",
            "description": "Alert/Warning Messages",
            "required": [
                "alertType",
                "alertContent",
                "severity"
            ],
            "properties": {
                "alertType": {
                    "type": "string",
                    "description": "A alert type\n\nDNS TUNNELS: messages about DNS TUNNELS attacks\n\nDNS DDOS: messages about DNS DDOS attacks\n\nDNS SUBDOMAIN DDOS: messages about DNS SubDomain DDoS attacks\n\nDNS REFLECTION AND AMPLIFICATION: messages about DNS REFLECTION AND AMPLIFICATION attacks"
                },
                "alertContent": {
                    "type": "string",
                    "description": "Alert Content"
                },
                "timestamp": {
                    "type": "string",
                    "description": "Time when we was attacked"
                },
                "severity": {
                    "type": "string",
                    "description": "Severity type\n\nCRITICAL: critical problem messages.\n\nWARNING: warning problem messages.\n\nINFO: information messages."
                }
            },
            "example": {
                "alertType": "DNS DDOS",
                "alertContent": "DDI DDoS Detection\nThe VitalQIP DDI Analytics server detected an abnormally high DNS query rate that exceeds the configured threshold for the DNS server on 2016-10-20T03:44:21.256001Z.\nIf desired, information on DNS queries can be obtained from the following sites:\nDNS Top Clients:\nhttp://192.168.88.175:5601/app/kibana#/visualize/edit/DNS-Top-Clients-IN\nTop-Clients-IN\nDNS Top Requested Domain Names:\nhttp://192.168.88.175:5601/app/kibana#/visualize/edit/DNS-Top-Requested-Domain-Names-IN\nDNS Top Requested Record Types:\nhttp://192.168.88.175:5601/app/kibana#/visualize/edit/DNS-Top-Requested-Record-Types-IN\nTo mitigate a DDoS attack, an administrator may want to configure Response Rate\n",
                "severity": "WARNING"
            }
        },
        "SchedulerOptions": {
            "type": "object",
            "properties": {
                "runMode": {
                    "type": "string",
                    "description": "IN_FOREGROUND: run the job immediately.\n\nIN_BACKGROUND: run the job in background.\n\nSCHEDULED_AT: run the job for later.\n\nThe default value is IN_FOREGROUND for server push and IN_BACKGROUND for preview push.",
                    "default": "IN_FOREGROUND",
                    "enum":[
                        "IN_FOREGROUND",
                        "IN_BACKGROUND",
                        "SCHEDULED_AT"
                    ]
                },
                "scheduledTime": {
                    "type": "string",
                    "description": "Specify a date and time run the push, support the following date formats: yyyy-MM-dd'T'HH:mm:ss.SSSZ; MM/dd/yyyy hh:mm; EEE, yyyy-MM-dd hh:mm; yyyy-MM-dd hh:mm z; yyyyMMdd'T'hhmmZ; yyyy-MM-dd h:mma; MMM d HH:mm yyyy; EEE MMM d HH:mm:ss zzz yyyy"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the job."
                },
                "sendEmail": {
                    "type": "boolean",
                    "description": "If the value is set to true then an email to be send when the job completed, it will require an email address is exist in toEmail field. The default is false."
                },
                "toEmail": {
                    "type": "string",
                    "description": "An email address of up to 255 characters. Multiple email addresses must be separated by a comma (,)."
                },
                "ccEmail": {
                    "type": "string",
                    "description": "An email address of up to 255 characters. Multiple email addresses must be separated by a comma (,)."
                }
            }
        },
        "TokenInfo": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string",
                    "description": "token"
                }
            }
        },
        "JobInfo": {
            "properties": {
                "adminName": {
                    "type": "string",
                    "description": "Filters on which the user's jobs are displayed. This field is disabled if the user is not a master or organization administrator, since normal administrator may only view."
                },
                "name": {
                    "type": "string",
                    "description": "Name of type job."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the job."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the job scheduler. Valid values are: Running, Pending, Delayed, Scheduled, Completed, Failed, Cancelled."
                },
                "server": {
                    "type": "string",
                    "description": "Name of the server to which the scheduled job is assigned."
                },
                "scheduledTime": {
                    "type": "string",
                    "description": "Jobs that are scheduled or started after a specified date and time, support the following date format: yyyy-MM-dd HH:mm z"
                },
                "startTime": {
                    "type": "string",
                    "description": "Jobs that are started in a specified date and time, support the following date format: yyyy-MM-dd HH:mm z"
                },
                "completedTime": {
                    "type": "string",
                    "description": "Jobs that are completed in a specified date and time, support the following date format: yyyy-MM-dd HH:mm z"
                }
            }
        }
    }
}